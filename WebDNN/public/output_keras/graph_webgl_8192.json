{
  "converted_at": 1610201555,
  "inputs": [
    "Variable1"
  ],
  "outputs": [
    "Variable284"
  ],
  "memory_layout": {
    "static": {
      "size": -1,
      "allocations": {
        "ConstantVariable198": {
          "name": "ConstantVariable198",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable182": {
          "name": "ConstantVariable182",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable174": {
          "name": "ConstantVariable174",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable134": {
          "name": "ConstantVariable134",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1019": {
          "name": "ConstantVariable1019",
          "offset": -1,
          "size": 262144,
          "width": 256,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable983": {
          "name": "ConstantVariable983",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable9": {
          "name": "ConstantVariable9",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable74": {
          "name": "ConstantVariable74",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable724": {
          "name": "Variable724",
          "offset": -1,
          "size": 774400,
          "width": 8192,
          "height": 95,
          "channel_mode": "R"
        },
        "ConstantVariable941": {
          "name": "ConstantVariable941",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable210": {
          "name": "ConstantVariable210",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable498": {
          "name": "ConstantVariable498",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable955": {
          "name": "ConstantVariable955",
          "offset": -1,
          "size": 65536,
          "width": 128,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable1": {
          "name": "Variable1",
          "offset": -1,
          "size": 150528,
          "width": 8192,
          "height": 19,
          "channel_mode": "R"
        },
        "ConstantVariable90": {
          "name": "ConstantVariable90",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable186": {
          "name": "ConstantVariable186",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable78": {
          "name": "ConstantVariable78",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable27": {
          "name": "Variable27",
          "offset": -1,
          "size": 774400,
          "width": 64,
          "height": 3025,
          "channel_mode": "RGBA"
        },
        "ConstantVariable843": {
          "name": "ConstantVariable843",
          "offset": -1,
          "size": 9408,
          "width": 147,
          "height": 64,
          "channel_mode": "R"
        },
        "ConstantVariable86": {
          "name": "ConstantVariable86",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable106": {
          "name": "ConstantVariable106",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable98": {
          "name": "ConstantVariable98",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable995": {
          "name": "ConstantVariable995",
          "offset": -1,
          "size": 65536,
          "width": 32,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable166": {
          "name": "ConstantVariable166",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable22": {
          "name": "Variable22",
          "offset": -1,
          "size": 774400,
          "width": 8192,
          "height": 95,
          "channel_mode": "R"
        },
        "ConstantVariable94": {
          "name": "ConstantVariable94",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable949": {
          "name": "ConstantVariable949",
          "offset": -1,
          "size": 524288,
          "width": 128,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "ConstantVariable178": {
          "name": "ConstantVariable178",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable24": {
          "name": "Variable24",
          "offset": -1,
          "size": 774400,
          "width": 8192,
          "height": 95,
          "channel_mode": "R"
        },
        "ConstantVariable162": {
          "name": "ConstantVariable162",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable999": {
          "name": "ConstantVariable999",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable939": {
          "name": "ConstantVariable939",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable17": {
          "name": "Variable17",
          "offset": -1,
          "size": 193600,
          "width": 16,
          "height": 3025,
          "channel_mode": "RGBA"
        },
        "ConstantVariable220": {
          "name": "ConstantVariable220",
          "offset": -1,
          "size": 1000,
          "width": 1000,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1369": {
          "name": "Variable1369",
          "offset": -1,
          "size": 921984,
          "width": 147,
          "height": 6272,
          "channel_mode": "R"
        },
        "ConstantVariable937": {
          "name": "ConstantVariable937",
          "offset": -1,
          "size": 2097152,
          "width": 256,
          "height": 2048,
          "channel_mode": "RGBA"
        },
        "ConstantVariable991": {
          "name": "ConstantVariable991",
          "offset": -1,
          "size": 65536,
          "width": 128,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1033": {
          "name": "ConstantVariable1033",
          "offset": -1,
          "size": 1048576,
          "width": 512,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "Variable184": {
          "name": "Variable184",
          "offset": -1,
          "size": 50176,
          "width": 8192,
          "height": 7,
          "channel_mode": "R"
        },
        "ConstantVariable1029": {
          "name": "ConstantVariable1029",
          "offset": -1,
          "size": 1048576,
          "width": 512,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable953": {
          "name": "ConstantVariable953",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable170": {
          "name": "ConstantVariable170",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1035": {
          "name": "ConstantVariable1035",
          "offset": -1,
          "size": 1048576,
          "width": 128,
          "height": 2048,
          "channel_mode": "RGBA"
        },
        "Variable178": {
          "name": "Variable178",
          "offset": -1,
          "size": 200704,
          "width": 8192,
          "height": 25,
          "channel_mode": "R"
        },
        "ConstantVariable993": {
          "name": "ConstantVariable993",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable943": {
          "name": "ConstantVariable943",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable102": {
          "name": "ConstantVariable102",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable150": {
          "name": "ConstantVariable150",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable951": {
          "name": "ConstantVariable951",
          "offset": -1,
          "size": 65536,
          "width": 32,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable989": {
          "name": "ConstantVariable989",
          "offset": -1,
          "size": 65536,
          "width": 32,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1017": {
          "name": "ConstantVariable1017",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "Variable32": {
          "name": "Variable32",
          "offset": -1,
          "size": 193600,
          "width": 8192,
          "height": 24,
          "channel_mode": "R"
        },
        "Variable173": {
          "name": "Variable173",
          "offset": -1,
          "size": 50176,
          "width": 64,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "ConstantVariable957": {
          "name": "ConstantVariable957",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable202": {
          "name": "ConstantVariable202",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable218": {
          "name": "ConstantVariable218",
          "offset": -1,
          "size": 2048,
          "width": 2048,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable179": {
          "name": "Variable179",
          "offset": -1,
          "size": 200704,
          "width": 256,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "ConstantVariable70": {
          "name": "ConstantVariable70",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable987": {
          "name": "ConstantVariable987",
          "offset": -1,
          "size": 65536,
          "width": 128,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable959": {
          "name": "ConstantVariable959",
          "offset": -1,
          "size": 131072,
          "width": 64,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "Variable1292": {
          "name": "Variable1292",
          "offset": -1,
          "size": 451584,
          "width": 576,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1023": {
          "name": "ConstantVariable1023",
          "offset": -1,
          "size": 524288,
          "width": 256,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable126": {
          "name": "ConstantVariable126",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1021": {
          "name": "ConstantVariable1021",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "ConstantVariable82": {
          "name": "ConstantVariable82",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable504": {
          "name": "ConstantVariable504",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1015": {
          "name": "ConstantVariable1015",
          "offset": -1,
          "size": 262144,
          "width": 256,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1027": {
          "name": "ConstantVariable1027",
          "offset": -1,
          "size": 1048576,
          "width": 128,
          "height": 2048,
          "channel_mode": "RGBA"
        },
        "ConstantVariable985": {
          "name": "ConstantVariable985",
          "offset": -1,
          "size": 65536,
          "width": 32,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable122": {
          "name": "ConstantVariable122",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable158": {
          "name": "ConstantVariable158",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable12": {
          "name": "Variable12",
          "offset": -1,
          "size": 193600,
          "width": 8192,
          "height": 24,
          "channel_mode": "R"
        },
        "Variable1212": {
          "name": "Variable1212",
          "offset": -1,
          "size": 1742400,
          "width": 144,
          "height": 3025,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1003": {
          "name": "ConstantVariable1003",
          "offset": -1,
          "size": 262144,
          "width": 256,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable152": {
          "name": "Variable152",
          "offset": -1,
          "size": 50176,
          "width": 8192,
          "height": 7,
          "channel_mode": "R"
        },
        "ConstantVariable58": {
          "name": "ConstantVariable58",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable130": {
          "name": "ConstantVariable130",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1007": {
          "name": "ConstantVariable1007",
          "offset": -1,
          "size": 262144,
          "width": 256,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable147": {
          "name": "Variable147",
          "offset": -1,
          "size": 200704,
          "width": 256,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "Variable1183": {
          "name": "Variable1183",
          "offset": -1,
          "size": 802816,
          "width": 8192,
          "height": 98,
          "channel_mode": "R"
        },
        "ConstantVariable496": {
          "name": "ConstantVariable496",
          "offset": -1,
          "size": 2048,
          "width": 2048,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable231": {
          "name": "Variable231",
          "offset": -1,
          "size": 25088,
          "width": 8192,
          "height": 4,
          "channel_mode": "R"
        },
        "Variable146": {
          "name": "Variable146",
          "offset": -1,
          "size": 200704,
          "width": 8192,
          "height": 25,
          "channel_mode": "R"
        },
        "Variable1366": {
          "name": "Variable1366",
          "offset": -1,
          "size": 1000,
          "width": 1000,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable733": {
          "name": "Variable733",
          "offset": -1,
          "size": 200704,
          "width": 8192,
          "height": 25,
          "channel_mode": "R"
        },
        "ConstantVariable973": {
          "name": "ConstantVariable973",
          "offset": -1,
          "size": 16384,
          "width": 64,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "Variable144": {
          "name": "Variable144",
          "offset": -1,
          "size": 200704,
          "width": 8192,
          "height": 25,
          "channel_mode": "R"
        },
        "ConstantVariable967": {
          "name": "ConstantVariable967",
          "offset": -1,
          "size": 36864,
          "width": 144,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "ConstantVariable110": {
          "name": "ConstantVariable110",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable142": {
          "name": "Variable142",
          "offset": -1,
          "size": 200704,
          "width": 8192,
          "height": 25,
          "channel_mode": "R"
        },
        "Variable1364": {
          "name": "Variable1364",
          "offset": -1,
          "size": 1,
          "width": 1,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable137": {
          "name": "Variable137",
          "offset": -1,
          "size": 50176,
          "width": 64,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "Variable283": {
          "name": "Variable283",
          "offset": -1,
          "size": 1000,
          "width": 1000,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1005": {
          "name": "ConstantVariable1005",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "ConstantVariable826": {
          "name": "ConstantVariable826",
          "offset": -1,
          "size": 2048000,
          "width": 512,
          "height": 1000,
          "channel_mode": "RGBA"
        },
        "Variable1363": {
          "name": "Variable1363",
          "offset": -1,
          "size": 1,
          "width": 1,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable146": {
          "name": "ConstantVariable146",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable935": {
          "name": "ConstantVariable935",
          "offset": -1,
          "size": 2359296,
          "width": 1152,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "Variable282": {
          "name": "Variable282",
          "offset": -1,
          "size": 1000,
          "width": 1000,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable18": {
          "name": "ConstantVariable18",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1268": {
          "name": "Variable1268",
          "offset": -1,
          "size": 451584,
          "width": 576,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "Variable1340": {
          "name": "Variable1340",
          "offset": -1,
          "size": 50176,
          "width": 256,
          "height": 49,
          "channel_mode": "RGBA"
        },
        "ConstantVariable502": {
          "name": "ConstantVariable502",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable132": {
          "name": "Variable132",
          "offset": -1,
          "size": 50176,
          "width": 8192,
          "height": 7,
          "channel_mode": "R"
        },
        "ConstantVariable500": {
          "name": "ConstantVariable500",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable131": {
          "name": "Variable131",
          "offset": -1,
          "size": 50176,
          "width": 8192,
          "height": 7,
          "channel_mode": "R"
        },
        "Variable130": {
          "name": "Variable130",
          "offset": -1,
          "size": 50176,
          "width": 8192,
          "height": 7,
          "channel_mode": "R"
        },
        "Variable281": {
          "name": "Variable281",
          "offset": -1,
          "size": 2048,
          "width": 512,
          "height": 1,
          "channel_mode": "RGBA"
        },
        "ConstantVariable965": {
          "name": "ConstantVariable965",
          "offset": -1,
          "size": 4096,
          "width": 16,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "Variable1275": {
          "name": "Variable1275",
          "offset": -1,
          "size": 100352,
          "width": 128,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "Variable10": {
          "name": "Variable10",
          "offset": -1,
          "size": 193600,
          "width": 8192,
          "height": 24,
          "channel_mode": "R"
        },
        "ConstantVariable1031": {
          "name": "ConstantVariable1031",
          "offset": -1,
          "size": 1048576,
          "width": 128,
          "height": 2048,
          "channel_mode": "RGBA"
        },
        "ConstantVariable30": {
          "name": "ConstantVariable30",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1555": {
          "name": "Variable1555",
          "offset": -1,
          "size": 2048,
          "width": 2048,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable280": {
          "name": "Variable280",
          "offset": -1,
          "size": 2048,
          "width": 2048,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable273": {
          "name": "Variable273",
          "offset": -1,
          "size": 25088,
          "width": 128,
          "height": 49,
          "channel_mode": "RGBA"
        },
        "Variable116": {
          "name": "Variable116",
          "offset": -1,
          "size": 100352,
          "width": 8192,
          "height": 13,
          "channel_mode": "R"
        },
        "ConstantVariable1011": {
          "name": "ConstantVariable1011",
          "offset": -1,
          "size": 262144,
          "width": 256,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable844": {
          "name": "ConstantVariable844",
          "offset": -1,
          "size": 9408,
          "width": 147,
          "height": 64,
          "channel_mode": "R"
        },
        "Variable5": {
          "name": "Variable5",
          "offset": -1,
          "size": 802816,
          "width": 8192,
          "height": 98,
          "channel_mode": "R"
        },
        "Variable1357": {
          "name": "Variable1357",
          "offset": -1,
          "size": 225792,
          "width": 1152,
          "height": 49,
          "channel_mode": "RGBA"
        },
        "ConstantVariable961": {
          "name": "ConstantVariable961",
          "offset": -1,
          "size": 36864,
          "width": 144,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1025": {
          "name": "ConstantVariable1025",
          "offset": -1,
          "size": 2359296,
          "width": 1152,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "Variable111": {
          "name": "Variable111",
          "offset": -1,
          "size": 401408,
          "width": 128,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "ConstantVariable945": {
          "name": "ConstantVariable945",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable154": {
          "name": "ConstantVariable154",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable78": {
          "name": "Variable78",
          "offset": -1,
          "size": 401408,
          "width": 8192,
          "height": 49,
          "channel_mode": "R"
        },
        "ConstantVariable975": {
          "name": "ConstantVariable975",
          "offset": -1,
          "size": 16384,
          "width": 16,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable728": {
          "name": "Variable728",
          "offset": -1,
          "size": 401408,
          "width": 8192,
          "height": 49,
          "channel_mode": "R"
        },
        "Variable110": {
          "name": "Variable110",
          "offset": -1,
          "size": 401408,
          "width": 8192,
          "height": 49,
          "channel_mode": "R"
        },
        "ConstantVariable42": {
          "name": "ConstantVariable42",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable142": {
          "name": "ConstantVariable142",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable105": {
          "name": "Variable105",
          "offset": -1,
          "size": 100352,
          "width": 32,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "ConstantVariable969": {
          "name": "ConstantVariable969",
          "offset": -1,
          "size": 16384,
          "width": 16,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable947": {
          "name": "ConstantVariable947",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable64": {
          "name": "Variable64",
          "offset": -1,
          "size": 100352,
          "width": 8192,
          "height": 13,
          "channel_mode": "R"
        },
        "ConstantVariable38": {
          "name": "ConstantVariable38",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1485": {
          "name": "Variable1485",
          "offset": -1,
          "size": 193600,
          "width": 8192,
          "height": 24,
          "channel_mode": "R"
        },
        "Variable1223": {
          "name": "Variable1223",
          "offset": -1,
          "size": 903168,
          "width": 288,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "ConstantVariable214": {
          "name": "ConstantVariable214",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable7": {
          "name": "Variable7",
          "offset": -1,
          "size": 193600,
          "width": 16,
          "height": 3025,
          "channel_mode": "RGBA"
        },
        "ConstantVariable50": {
          "name": "ConstantVariable50",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1001": {
          "name": "ConstantVariable1001",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "Variable63": {
          "name": "Variable63",
          "offset": -1,
          "size": 100352,
          "width": 8192,
          "height": 13,
          "channel_mode": "R"
        },
        "Variable1247": {
          "name": "Variable1247",
          "offset": -1,
          "size": 903168,
          "width": 288,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "Variable252": {
          "name": "Variable252",
          "offset": -1,
          "size": 25088,
          "width": 8192,
          "height": 4,
          "channel_mode": "R"
        },
        "ConstantVariable963": {
          "name": "ConstantVariable963",
          "offset": -1,
          "size": 36864,
          "width": 144,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "Variable1371": {
          "name": "Variable1371",
          "offset": -1,
          "size": 401408,
          "width": 8192,
          "height": 49,
          "channel_mode": "R"
        },
        "Variable247": {
          "name": "Variable247",
          "offset": -1,
          "size": 100352,
          "width": 512,
          "height": 49,
          "channel_mode": "RGBA"
        },
        "ConstantVariable206": {
          "name": "ConstantVariable206",
          "offset": -1,
          "size": 2048,
          "width": 2048,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable62": {
          "name": "Variable62",
          "offset": -1,
          "size": 100352,
          "width": 8192,
          "height": 13,
          "channel_mode": "R"
        },
        "ConstantVariable977": {
          "name": "ConstantVariable977",
          "offset": -1,
          "size": 16384,
          "width": 64,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "ConstantVariable971": {
          "name": "ConstantVariable971",
          "offset": -1,
          "size": 16384,
          "width": 16,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable69": {
          "name": "Variable69",
          "offset": -1,
          "size": 100352,
          "width": 32,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "ConstantVariable138": {
          "name": "ConstantVariable138",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable14": {
          "name": "ConstantVariable14",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable997": {
          "name": "ConstantVariable997",
          "offset": -1,
          "size": 131072,
          "width": 128,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable716": {
          "name": "Variable716",
          "offset": -1,
          "size": 802816,
          "width": 8192,
          "height": 98,
          "channel_mode": "R"
        },
        "Variable58": {
          "name": "Variable58",
          "offset": -1,
          "size": 774400,
          "width": 8192,
          "height": 95,
          "channel_mode": "R"
        },
        "ConstantVariable1009": {
          "name": "ConstantVariable1009",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "Variable1370": {
          "name": "Variable1370",
          "offset": -1,
          "size": 921984,
          "width": 147,
          "height": 6272,
          "channel_mode": "R"
        },
        "Variable1230": {
          "name": "Variable1230",
          "offset": -1,
          "size": 200704,
          "width": 64,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "ConstantVariable54": {
          "name": "ConstantVariable54",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable34": {
          "name": "ConstantVariable34",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1372": {
          "name": "Variable1372",
          "offset": -1,
          "size": 401408,
          "width": 8192,
          "height": 49,
          "channel_mode": "R"
        },
        "ConstantVariable981": {
          "name": "ConstantVariable981",
          "offset": -1,
          "size": 32768,
          "width": 64,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable979": {
          "name": "ConstantVariable979",
          "offset": -1,
          "size": 16384,
          "width": 16,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable933": {
          "name": "ConstantVariable933",
          "offset": -1,
          "size": 2359296,
          "width": 1152,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "Variable84": {
          "name": "Variable84",
          "offset": -1,
          "size": 100352,
          "width": 8192,
          "height": 13,
          "channel_mode": "R"
        },
        "ConstantVariable46": {
          "name": "ConstantVariable46",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1013": {
          "name": "ConstantVariable1013",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "Variable232": {
          "name": "Variable232",
          "offset": -1,
          "size": 25088,
          "width": 8192,
          "height": 4,
          "channel_mode": "R"
        },
        "Variable230": {
          "name": "Variable230",
          "offset": -1,
          "size": 25088,
          "width": 8192,
          "height": 4,
          "channel_mode": "R"
        }
      }
    },
    "dynamic": {
      "size": -1,
      "allocations": {}
    },
    "mapping": {
      "Variable1": "Variable1",
      "Variable1369": "Variable1369",
      "Variable1370": "Variable1370",
      "Variable1372": "Variable1372",
      "Variable1371": "Variable1371",
      "Variable1183": "Variable1183",
      "Variable716": "Variable716",
      "Variable5": "Variable5",
      "Variable6": "Variable1183",
      "Variable1485": "Variable1485",
      "Variable7": "Variable7",
      "Variable10": "Variable10",
      "Variable11": "Variable1485",
      "Variable12": "Variable12",
      "Variable1189": "Variable1212",
      "Variable15": "Variable1485",
      "Variable16": "Variable10",
      "Variable1487": "Variable12",
      "Variable17": "Variable17",
      "Variable24": "Variable24",
      "Variable22": "Variable22",
      "Variable724": "Variable724",
      "Variable26": "Variable58",
      "Variable1493": "Variable22",
      "Variable27": "Variable27",
      "Variable30": "Variable1485",
      "Variable31": "Variable10",
      "Variable32": "Variable32",
      "Variable1202": "Variable1212",
      "Variable35": "Variable1485",
      "Variable36": "Variable10",
      "Variable1491": "Variable12",
      "Variable37": "Variable17",
      "Variable40": "Variable24",
      "Variable726": "Variable724",
      "Variable42": "Variable58",
      "Variable1498": "Variable22",
      "Variable43": "Variable27",
      "Variable46": "Variable1485",
      "Variable47": "Variable10",
      "Variable48": "Variable32",
      "Variable1212": "Variable1212",
      "Variable51": "Variable1485",
      "Variable52": "Variable10",
      "Variable1496": "Variable12",
      "Variable53": "Variable7",
      "Variable56": "Variable24",
      "Variable727": "Variable724",
      "Variable58": "Variable58",
      "Variable59": "Variable22",
      "Variable1230": "Variable1230",
      "Variable62": "Variable62",
      "Variable63": "Variable63",
      "Variable64": "Variable64",
      "Variable1223": "Variable1223",
      "Variable67": "Variable62",
      "Variable68": "Variable63",
      "Variable1499": "Variable64",
      "Variable69": "Variable69",
      "Variable76": "Variable1372",
      "Variable74": "Variable1371",
      "Variable728": "Variable728",
      "Variable78": "Variable78",
      "Variable1505": "Variable1371",
      "Variable79": "Variable111",
      "Variable82": "Variable62",
      "Variable83": "Variable63",
      "Variable84": "Variable84",
      "Variable1237": "Variable1223",
      "Variable87": "Variable62",
      "Variable88": "Variable63",
      "Variable1503": "Variable64",
      "Variable89": "Variable69",
      "Variable92": "Variable1372",
      "Variable730": "Variable728",
      "Variable94": "Variable78",
      "Variable1510": "Variable1371",
      "Variable95": "Variable111",
      "Variable98": "Variable62",
      "Variable99": "Variable63",
      "Variable100": "Variable84",
      "Variable1247": "Variable1247",
      "Variable103": "Variable62",
      "Variable104": "Variable63",
      "Variable1508": "Variable64",
      "Variable105": "Variable105",
      "Variable108": "Variable1372",
      "Variable731": "Variable728",
      "Variable110": "Variable110",
      "Variable1515": "Variable1371",
      "Variable111": "Variable111",
      "Variable114": "Variable62",
      "Variable115": "Variable63",
      "Variable116": "Variable116",
      "Variable1257": "Variable1223",
      "Variable119": "Variable62",
      "Variable120": "Variable63",
      "Variable1513": "Variable64",
      "Variable121": "Variable69",
      "Variable124": "Variable1372",
      "Variable732": "Variable728",
      "Variable126": "Variable78",
      "Variable127": "Variable1371",
      "Variable1275": "Variable1275",
      "Variable130": "Variable130",
      "Variable131": "Variable131",
      "Variable132": "Variable132",
      "Variable1268": "Variable1268",
      "Variable135": "Variable130",
      "Variable136": "Variable131",
      "Variable1516": "Variable132",
      "Variable137": "Variable137",
      "Variable144": "Variable144",
      "Variable142": "Variable142",
      "Variable733": "Variable733",
      "Variable146": "Variable146",
      "Variable1522": "Variable142",
      "Variable147": "Variable147",
      "Variable150": "Variable130",
      "Variable151": "Variable131",
      "Variable152": "Variable152",
      "Variable1282": "Variable1268",
      "Variable155": "Variable130",
      "Variable156": "Variable131",
      "Variable1520": "Variable132",
      "Variable157": "Variable137",
      "Variable160": "Variable144",
      "Variable735": "Variable733",
      "Variable162": "Variable146",
      "Variable1527": "Variable142",
      "Variable163": "Variable147",
      "Variable166": "Variable130",
      "Variable167": "Variable131",
      "Variable168": "Variable152",
      "Variable1292": "Variable1292",
      "Variable171": "Variable130",
      "Variable172": "Variable131",
      "Variable1525": "Variable132",
      "Variable173": "Variable173",
      "Variable176": "Variable144",
      "Variable736": "Variable733",
      "Variable178": "Variable178",
      "Variable1532": "Variable142",
      "Variable179": "Variable179",
      "Variable182": "Variable130",
      "Variable183": "Variable131",
      "Variable184": "Variable184",
      "Variable1302": "Variable1268",
      "Variable187": "Variable130",
      "Variable188": "Variable131",
      "Variable1530": "Variable132",
      "Variable189": "Variable137",
      "Variable192": "Variable144",
      "Variable737": "Variable733",
      "Variable194": "Variable146",
      "Variable1537": "Variable142",
      "Variable195": "Variable147",
      "Variable198": "Variable130",
      "Variable199": "Variable131",
      "Variable200": "Variable152",
      "Variable1312": "Variable1292",
      "Variable203": "Variable130",
      "Variable204": "Variable131",
      "Variable1535": "Variable132",
      "Variable205": "Variable173",
      "Variable208": "Variable144",
      "Variable738": "Variable733",
      "Variable210": "Variable178",
      "Variable1542": "Variable142",
      "Variable211": "Variable179",
      "Variable214": "Variable130",
      "Variable215": "Variable131",
      "Variable216": "Variable184",
      "Variable1322": "Variable1268",
      "Variable219": "Variable130",
      "Variable220": "Variable131",
      "Variable1540": "Variable132",
      "Variable221": "Variable137",
      "Variable224": "Variable144",
      "Variable739": "Variable733",
      "Variable226": "Variable146",
      "Variable227": "Variable142",
      "Variable1340": "Variable1340",
      "Variable230": "Variable230",
      "Variable231": "Variable231",
      "Variable232": "Variable232",
      "Variable1333": "Variable1357",
      "Variable235": "Variable230",
      "Variable236": "Variable231",
      "Variable1543": "Variable232",
      "Variable237": "Variable273",
      "Variable244": "Variable63",
      "Variable242": "Variable62",
      "Variable740": "Variable84",
      "Variable246": "Variable64",
      "Variable1549": "Variable62",
      "Variable247": "Variable247",
      "Variable250": "Variable230",
      "Variable251": "Variable231",
      "Variable252": "Variable252",
      "Variable1347": "Variable1357",
      "Variable255": "Variable230",
      "Variable256": "Variable231",
      "Variable1547": "Variable232",
      "Variable257": "Variable273",
      "Variable260": "Variable63",
      "Variable742": "Variable116",
      "Variable262": "Variable64",
      "Variable1554": "Variable62",
      "Variable263": "Variable247",
      "Variable266": "Variable230",
      "Variable267": "Variable231",
      "Variable268": "Variable252",
      "Variable1357": "Variable1357",
      "Variable271": "Variable230",
      "Variable272": "Variable231",
      "Variable1552": "Variable232",
      "Variable273": "Variable273",
      "Variable276": "Variable63",
      "Variable743": "Variable84",
      "Variable278": "Variable64",
      "Variable279": "Variable62",
      "Variable280": "Variable280",
      "Variable1555": "Variable1555",
      "Variable281": "Variable281",
      "Variable282": "Variable282",
      "Variable283": "Variable283",
      "Variable1363": "Variable1363",
      "Variable1364": "Variable1364",
      "Variable1365": "Variable282",
      "Variable1366": "Variable1366",
      "Variable1367": "Variable1363",
      "Variable284": "Variable282",
      "ConstantVariable843": "ConstantVariable843",
      "ConstantVariable844": "ConstantVariable844",
      "ConstantVariable9": "ConstantVariable9",
      "ConstantVariable504": "ConstantVariable504",
      "ConstantVariable965": "ConstantVariable965",
      "ConstantVariable14": "ConstantVariable14",
      "ConstantVariable967": "ConstantVariable967",
      "ConstantVariable18": "ConstantVariable18",
      "ConstantVariable969": "ConstantVariable969",
      "ConstantVariable971": "ConstantVariable971",
      "ConstantVariable502": "ConstantVariable502",
      "ConstantVariable973": "ConstantVariable973",
      "ConstantVariable30": "ConstantVariable30",
      "ConstantVariable963": "ConstantVariable963",
      "ConstantVariable34": "ConstantVariable34",
      "ConstantVariable975": "ConstantVariable975",
      "ConstantVariable38": "ConstantVariable38",
      "ConstantVariable977": "ConstantVariable977",
      "ConstantVariable42": "ConstantVariable42",
      "ConstantVariable961": "ConstantVariable961",
      "ConstantVariable46": "ConstantVariable46",
      "ConstantVariable979": "ConstantVariable979",
      "ConstantVariable50": "ConstantVariable50",
      "ConstantVariable981": "ConstantVariable981",
      "ConstantVariable54": "ConstantVariable54",
      "ConstantVariable983": "ConstantVariable983",
      "ConstantVariable58": "ConstantVariable58",
      "ConstantVariable985": "ConstantVariable985",
      "ConstantVariable959": "ConstantVariable959",
      "ConstantVariable500": "ConstantVariable500",
      "ConstantVariable987": "ConstantVariable987",
      "ConstantVariable70": "ConstantVariable70",
      "ConstantVariable957": "ConstantVariable957",
      "ConstantVariable74": "ConstantVariable74",
      "ConstantVariable989": "ConstantVariable989",
      "ConstantVariable78": "ConstantVariable78",
      "ConstantVariable991": "ConstantVariable991",
      "ConstantVariable82": "ConstantVariable82",
      "ConstantVariable993": "ConstantVariable993",
      "ConstantVariable86": "ConstantVariable86",
      "ConstantVariable995": "ConstantVariable995",
      "ConstantVariable90": "ConstantVariable90",
      "ConstantVariable955": "ConstantVariable955",
      "ConstantVariable94": "ConstantVariable94",
      "ConstantVariable953": "ConstantVariable953",
      "ConstantVariable98": "ConstantVariable98",
      "ConstantVariable951": "ConstantVariable951",
      "ConstantVariable102": "ConstantVariable102",
      "ConstantVariable997": "ConstantVariable997",
      "ConstantVariable106": "ConstantVariable106",
      "ConstantVariable999": "ConstantVariable999",
      "ConstantVariable110": "ConstantVariable110",
      "ConstantVariable1001": "ConstantVariable1001",
      "ConstantVariable949": "ConstantVariable949",
      "ConstantVariable498": "ConstantVariable498",
      "ConstantVariable1003": "ConstantVariable1003",
      "ConstantVariable122": "ConstantVariable122",
      "ConstantVariable947": "ConstantVariable947",
      "ConstantVariable126": "ConstantVariable126",
      "ConstantVariable1005": "ConstantVariable1005",
      "ConstantVariable130": "ConstantVariable130",
      "ConstantVariable1007": "ConstantVariable1007",
      "ConstantVariable134": "ConstantVariable134",
      "ConstantVariable945": "ConstantVariable945",
      "ConstantVariable138": "ConstantVariable138",
      "ConstantVariable1009": "ConstantVariable1009",
      "ConstantVariable142": "ConstantVariable142",
      "ConstantVariable1011": "ConstantVariable1011",
      "ConstantVariable146": "ConstantVariable146",
      "ConstantVariable943": "ConstantVariable943",
      "ConstantVariable150": "ConstantVariable150",
      "ConstantVariable1013": "ConstantVariable1013",
      "ConstantVariable154": "ConstantVariable154",
      "ConstantVariable1015": "ConstantVariable1015",
      "ConstantVariable158": "ConstantVariable158",
      "ConstantVariable941": "ConstantVariable941",
      "ConstantVariable162": "ConstantVariable162",
      "ConstantVariable1017": "ConstantVariable1017",
      "ConstantVariable166": "ConstantVariable166",
      "ConstantVariable1019": "ConstantVariable1019",
      "ConstantVariable170": "ConstantVariable170",
      "ConstantVariable939": "ConstantVariable939",
      "ConstantVariable174": "ConstantVariable174",
      "ConstantVariable1021": "ConstantVariable1021",
      "ConstantVariable178": "ConstantVariable178",
      "ConstantVariable1023": "ConstantVariable1023",
      "ConstantVariable182": "ConstantVariable182",
      "ConstantVariable1025": "ConstantVariable1025",
      "ConstantVariable186": "ConstantVariable186",
      "ConstantVariable1027": "ConstantVariable1027",
      "ConstantVariable937": "ConstantVariable937",
      "ConstantVariable496": "ConstantVariable496",
      "ConstantVariable1029": "ConstantVariable1029",
      "ConstantVariable198": "ConstantVariable198",
      "ConstantVariable935": "ConstantVariable935",
      "ConstantVariable202": "ConstantVariable202",
      "ConstantVariable1031": "ConstantVariable1031",
      "ConstantVariable206": "ConstantVariable206",
      "ConstantVariable1033": "ConstantVariable1033",
      "ConstantVariable210": "ConstantVariable210",
      "ConstantVariable933": "ConstantVariable933",
      "ConstantVariable214": "ConstantVariable214",
      "ConstantVariable1035": "ConstantVariable1035",
      "ConstantVariable218": "ConstantVariable218",
      "ConstantVariable826": "ConstantVariable826",
      "ConstantVariable220": "ConstantVariable220"
    }
  },
  "weight_encoding": "raw",
  "placeholders": [],
  "shader_sources": {
    "PartialIm2Col_R_dafb28ba7bedfb27a3247325a76e79d4e30fcad309c6a620934addc8": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(147,1);\nconst ivec4 v1 = ivec4(921984,16464,147,1);\nconst ivec4 v2 = ivec4(1,56,112,147);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(150528,672,3,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,19);\nconst vec2 v7 = vec2(0.0001220703125,0.05263157894736842);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    variable_position_col[1] += 0;\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 3 / 7;\n    int kw = khkwc1 / 3 - kh * 7;\n    int c1 = khkwc1 - (kh * 7 + kw) * 3;\n\n    int h1 = h2 * 2 - 3 + kh * 1;\n    int w1 = w2 * 2 - 3 + kw * 1;\n\n    if (h1 < 0 || h1 >= 224 || w1 < 0 || w1 >= 224) {\n        gl_FragColor.r = 0.0;\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n    }\n}\n",
    "PartialIm2Col_R_0a1011595409fff03ff3f93e0f50d7f243a6a88f846d44c7512015f6": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(147,1);\nconst ivec4 v1 = ivec4(921984,16464,147,1);\nconst ivec4 v2 = ivec4(1,56,112,147);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(150528,672,3,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,19);\nconst vec2 v7 = vec2(0.0001220703125,0.05263157894736842);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    variable_position_col[1] += 56;\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 3 / 7;\n    int kw = khkwc1 / 3 - kh * 7;\n    int c1 = khkwc1 - (kh * 7 + kw) * 3;\n\n    int h1 = h2 * 2 - 3 + kh * 1;\n    int w1 = w2 * 2 - 3 + kw * 1;\n\n    if (h1 < 0 || h1 >= 224 || w1 < 0 || w1 >= 224) {\n        gl_FragColor.r = 0.0;\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n    }\n}\n",
    "Tensordot_R_aafe262f0a8a2ebbe58812bb62f942767fd8e753c592f7e18c66171b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(64,1);\nconst ivec2 v2 = ivec2(6272,64);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.006802721088435374,0.00015943877551020407);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.006802721088435374,0.015625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 147; k++) {\n        float v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4).r;\n        float v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6).r;\n\n        v += v_a * v_b;\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Concat_30eabac47f4909c9a3fc5e928f72f429ff86741f3fd1d5620efda7e3": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(802816,7168,64,1);\nconst ivec4 v2 = ivec4(1,112,112,64);\nconst ivec2 v3 = ivec2(8192,1);\nconst ivec4 v4 = ivec4(802816,7168,64,1);\nconst ivec4 v5 = ivec4(1,112,112,64);\nuniform sampler2D v6;\nconst ivec4 v7 = ivec4(401408,7168,64,1);\nconst ivec2 v8 = ivec2(1,8192);\nconst ivec2 v9 = ivec2(8192,49);\nconst vec2 v10 = vec2(0.0001220703125,0.02040816326530612);\nuniform sampler2D v11;\nconst ivec4 v12 = ivec4(401408,7168,64,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,49);\nconst vec2 v15 = vec2(0.0001220703125,0.02040816326530612);\n\nvoid main() {\nivec4 variable_position_x0 = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\nivec4 variable_position_x1 = ((convert_position_fast(gl_FragCoord.yx,v3, v4, v5, 0)));\n    variable_position_x1[1] -= 56;\n\n    gl_FragColor.r = (\n        (variable_position_x0[1] >= 56)\n        ? texture2D(v6,((vec2((convert_position_fast(variable_position_x1,v7, v8, v9, 0))) + 0.5) * v10))\n        : texture2D(v11,((vec2((convert_position_fast(variable_position_x0,v12, v13, v14, 0))) + 0.5) * v15))\n    ).r;\n}\n",
    "ElementwiseMul_d69c354d6e6c1951a0a20f931f84c688e0a4f69f0fa9e0f4d6720393": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(64,1,1,1);\nconst ivec4 v2 = ivec4(12544,64,1,1);\nconst ivec4 v3 = ivec4(1,64,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,64);\nconst ivec2 v7 = ivec2(64,1);\nconst vec2 v8 = vec2(0.015625,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(64,1,1,1);\nconst ivec2 v11 = ivec2(1,8192);\nconst ivec2 v12 = ivec2(8192,98);\nconst vec2 v13 = vec2(0.0001220703125,0.01020408163265306);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 * x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_2bc04e710409ce908a7877e92a31b508ed9507e36c9a6af70926ea3b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(64,1,1,1);\nconst ivec4 v2 = ivec4(12544,64,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(64,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,98);\nconst vec2 v7 = vec2(0.0001220703125,0.01020408163265306);\nconst ivec4 v8 = ivec4(1,64,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,64);\nconst ivec2 v12 = ivec2(64,1);\nconst vec2 v13 = vec2(0.015625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_22575c2a096342ebbf6ffb700203eb438f7e9870eaa1a916b936e69b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,98.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "MaxPooling2D_6401fe918fe5ceb391e0219a4d623dbe6def0c298ff3d235787b88f6": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(193600,3520,64,1);\nconst ivec4 v2 = ivec4(1,55,55,64);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(802816,7168,64,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,98);\nconst vec2 v7 = vec2(0.0001220703125,0.01020408163265306);\n\nvoid main() {\n    ivec4 variable_position_y = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n    int n = variable_position_y.x;\n    int h2 = variable_position_y.y;\n    int w2 = variable_position_y.z;\n    int c = variable_position_y.w;\n\n    float v = -1e5;\n\n    for (int kh = 0; kh < 3; kh++) {\n        int h1 = h2 * 2 - 0 + kh;\n        if (h1 < 0 || h1 >= 112) continue;\n\n        for (int kw = 0; kw < 3; kw++) {\n            int w1 = w2 * 2 - 0 + kw;\n            if (w1 < 0 || w1 >= 112) continue;\n\n            v = max((texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c)),v4, v5, v6, 0))) + 0.5) * v7))).r, v);\n        }\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ConvertRtoRGBA_6b5badf12181e78c13fa021fad8c346017d22f21c215dd85a0405ec6": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(64,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(24,8192,1);\nconst vec3 v4 = vec3(0.041666666666666664,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(64,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(24,8192,1);\nconst vec3 v8 = vec3(0.041666666666666664,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(64,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(24,8192,1);\nconst vec3 v12 = vec3(0.041666666666666664,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(64,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(24,8192,1);\nconst vec3 v16 = vec3(0.041666666666666664,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_f52c0d0dc3a0dc876782de031fc35206e13998ede48b236065ed715e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(64,1);\nconst ivec2 v2 = ivec2(3025,64);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0625,0.00033057851239669424);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0625,0.015625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 16; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_daa777c0413be5ec7c8cdfde1599d62bd0be470ab38681ab1f4d952d": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(64,1,1,1);\nconst ivec4 v2 = ivec4(3025,64,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(64,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,24);\nconst vec2 v7 = vec2(0.0001220703125,0.041666666666666664);\nconst ivec4 v8 = ivec4(1,64,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,64);\nconst ivec2 v12 = ivec2(64,1);\nconst vec2 v13 = vec2(0.015625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_a4cd6cd87b101670950ee0460ed3db053f273e0180b68723c4ec5ccf": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,24.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_7fff1ab5047a4f569908a0c20ab70148ea1d5807dfc3cfe84d393896": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(576,4);\nconst ivec4 v1 = ivec4(1742400,31680,576,1);\nconst ivec4 v2 = ivec4(1,55,55,576);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(193600,3520,64,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,24);\nconst vec2 v7 = vec2(0.0001220703125,0.041666666666666664);\nconst ivec4 v8 = ivec4(193600,3520,64,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,24);\nconst vec2 v11 = vec2(0.0001220703125,0.041666666666666664);\nconst ivec4 v12 = ivec4(193600,3520,64,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,24);\nconst vec2 v15 = vec2(0.0001220703125,0.041666666666666664);\nconst ivec4 v16 = ivec4(193600,3520,64,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,24);\nconst vec2 v19 = vec2(0.0001220703125,0.041666666666666664);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 64 / 3;\n    int kw = khkwc1 / 64 - kh * 3;\n    int c1 = khkwc1 - (kh * 3 + kw) * 64;\n\n    int h1 = h2 * 1 - 1 + kh * 1;\n    int w1 = w2 * 1 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 55 || w1 < 0 || w1 >= 55) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_fd81f36edae778fbd28d0b7171ab7ddb5c29157b47ae86987f1c9862": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(64,1);\nconst ivec2 v2 = ivec2(3025,64);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.006944444444444444,0.00033057851239669424);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.006944444444444444,0.015625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 144; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Tensordot_RGBA_287b026c91176d309ec3a37816a155796d5cdb1de75db012b29a5107": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(256,1);\nconst ivec2 v2 = ivec2(3025,256);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0625,0.00033057851239669424);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0625,0.00390625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 16; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_c8b545c087ae1110ad04aadc6f42ced3be0f2259f62ed39c630ba765": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,95.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,95.0);\n\nvoid main() {\n    float y;\n\nfloat x1 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x0 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_a7bebc3ba848b4d3442944f3c2b34ec998936189f79e3ca1c582b7ba": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(256,1,1,1);\nconst ivec4 v2 = ivec4(3025,256,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(256,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,95);\nconst vec2 v7 = vec2(0.0001220703125,0.010526315789473684);\nconst ivec4 v8 = ivec4(1,256,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,256);\nconst ivec2 v12 = ivec2(256,1);\nconst vec2 v13 = vec2(0.00390625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_739f857c69c000d2cc1b42eaff72139b7f9f45ca9d9daf185ee15c02": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,95.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_f0e371144e57e4de1490109999504561ed212987bd01760be5e3959c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(256,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(95,8192,1);\nconst vec3 v4 = vec3(0.010526315789473684,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(256,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(95,8192,1);\nconst vec3 v8 = vec3(0.010526315789473684,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(256,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(95,8192,1);\nconst vec3 v12 = vec3(0.010526315789473684,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(256,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(95,8192,1);\nconst vec3 v16 = vec3(0.010526315789473684,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_4340cc146dfcc6316155498f414158390afd7edf941cdfa31dfb57d8": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(64,1);\nconst ivec2 v2 = ivec2(3025,64);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.015625,0.00033057851239669424);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.015625,0.015625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 64; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_d30147f76b23191f876f3035a69234ce37af958844b8ba115bc84aa5": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,95.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,95.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_680819142d303e158c1ec38646783a5692f7e1b8fe32cd9e7f404e03": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(256,1,1,1);\nconst ivec4 v2 = ivec4(3025,256,1,1);\nconst ivec4 v3 = ivec4(1,256,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,256);\nconst ivec2 v7 = ivec2(256,1);\nconst vec2 v8 = vec2(0.00390625,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(256,1,1,1);\nconst ivec2 v11 = ivec2(1,8192);\nconst ivec2 v12 = ivec2(8192,95);\nconst vec2 v13 = vec2(0.0001220703125,0.010526315789473684);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x0 = mod(variable_position_y, v3);\nfloat x0 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x0,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_19df9b720df0dbd75aec89dff0fd9e96c2d7bfa1e1bc04dce0274a7b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(256,4);\nconst ivec4 v1 = ivec4(200704,7168,256,1);\nconst ivec4 v2 = ivec4(1,28,28,256);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(774400,14080,256,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,95);\nconst vec2 v7 = vec2(0.0001220703125,0.010526315789473684);\nconst ivec4 v8 = ivec4(774400,14080,256,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,95);\nconst vec2 v11 = vec2(0.0001220703125,0.010526315789473684);\nconst ivec4 v12 = ivec4(774400,14080,256,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,95);\nconst vec2 v15 = vec2(0.0001220703125,0.010526315789473684);\nconst ivec4 v16 = ivec4(774400,14080,256,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,95);\nconst vec2 v19 = vec2(0.0001220703125,0.010526315789473684);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 256 / 1;\n    int kw = khkwc1 / 256 - kh * 1;\n    int c1 = khkwc1 - (kh * 1 + kw) * 256;\n\n    int h1 = h2 * 2 - 0 + kh * 1;\n    int w1 = w2 * 2 - 0 + kw * 1;\n\n    if (h1 < 0 || h1 >= 55 || w1 < 0 || w1 >= 55) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_a7f4b997a00d63938232abe063a0fa2d51c6c8d2627f496f843a3874": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(128,1);\nconst ivec2 v2 = ivec2(784,128);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.015625,0.0012755102040816326);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.015625,0.0078125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 64; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(128,1,1,1);\nconst ivec4 v2 = ivec4(784,128,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(128,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,13);\nconst vec2 v7 = vec2(0.0001220703125,0.07692307692307693);\nconst ivec4 v8 = ivec4(1,128,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,128);\nconst ivec2 v12 = ivec2(128,1);\nconst vec2 v13 = vec2(0.0078125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,13.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_a943845e4ada017175d3c674c513b873ee7a275653548494ea728c7a": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1152,4);\nconst ivec4 v1 = ivec4(903168,32256,1152,1);\nconst ivec4 v2 = ivec4(1,28,28,1152);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(100352,3584,128,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,13);\nconst vec2 v7 = vec2(0.0001220703125,0.07692307692307693);\nconst ivec4 v8 = ivec4(100352,3584,128,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,13);\nconst vec2 v11 = vec2(0.0001220703125,0.07692307692307693);\nconst ivec4 v12 = ivec4(100352,3584,128,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,13);\nconst vec2 v15 = vec2(0.0001220703125,0.07692307692307693);\nconst ivec4 v16 = ivec4(100352,3584,128,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,13);\nconst vec2 v19 = vec2(0.0001220703125,0.07692307692307693);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 128 / 3;\n    int kw = khkwc1 / 128 - kh * 3;\n    int c1 = khkwc1 - (kh * 3 + kw) * 128;\n\n    int h1 = h2 * 1 - 1 + kh * 1;\n    int w1 = w2 * 1 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 28 || w1 < 0 || w1 >= 28) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_f00c132b7b4c890704ab3878ab0e03ddfc99120da4a76c76e273981c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(128,1);\nconst ivec2 v2 = ivec2(784,128);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.003472222222222222,0.0012755102040816326);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.003472222222222222,0.0078125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 288; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ConvertRtoRGBA_2ecd12e5763499b4da2c18ee4f8458ff2dcfac137544f805facdee9e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(128,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(13,8192,1);\nconst vec3 v4 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(128,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(13,8192,1);\nconst vec3 v8 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(128,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(13,8192,1);\nconst vec3 v12 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(128,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(13,8192,1);\nconst vec3 v16 = vec3(0.07692307692307693,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_743e7cad0a4b1e24227dd916d724b19281fa73243aebd893ea48ebc6": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(512,1);\nconst ivec2 v2 = ivec2(784,512);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.03125,0.0012755102040816326);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.03125,0.001953125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 32; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Tensordot_RGBA_5bc68bcabe114d3ee7df06f8a7dd7dd43b708a62c009d983ad8ee2bd": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(512,1);\nconst ivec2 v2 = ivec2(784,512);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.015625,0.0012755102040816326);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.015625,0.001953125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 64; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_3e39163d917d910b5b86893d62827a216d9346c8e7ffc6ffb5509343": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,49.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,49.0);\n\nvoid main() {\n    float y;\n\nfloat x1 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x0 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_d17831a002ad24ab6acee630303afc34e4a6884f557ceabe6e457207": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(512,1,1,1);\nconst ivec4 v2 = ivec4(784,512,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(512,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,49);\nconst vec2 v7 = vec2(0.0001220703125,0.02040816326530612);\nconst ivec4 v8 = ivec4(1,512,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,512);\nconst ivec2 v12 = ivec2(512,1);\nconst vec2 v13 = vec2(0.001953125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_9f6fd8b5d518659a635b5aeae8d3394b899eb03ae043dc1f84ab03c2": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,49.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_619ce4239756512df13d0570850e09dae349fedc7faf0a79d3cc7f2c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(512,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(49,8192,1);\nconst vec3 v4 = vec3(0.02040816326530612,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(512,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(49,8192,1);\nconst vec3 v8 = vec3(0.02040816326530612,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(512,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(49,8192,1);\nconst vec3 v12 = vec3(0.02040816326530612,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(512,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(49,8192,1);\nconst vec3 v16 = vec3(0.02040816326530612,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_e42a9f202ff0e906a50efcbc9da50e2e44dd51ef43ab7dc642d38045": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(128,1);\nconst ivec2 v2 = ivec2(784,128);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0078125,0.0012755102040816326);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0078125,0.0078125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 128; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_ff314f97eb87ad7f93d365bda474752dd3bb9202b5caea505d452d5f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,49.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,49.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_cab34c79962a75acd77729592f9079ee0842b03615267f07ce21def1": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(512,1,1,1);\nconst ivec4 v2 = ivec4(784,512,1,1);\nconst ivec4 v3 = ivec4(1,512,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,512);\nconst ivec2 v7 = ivec2(512,1);\nconst vec2 v8 = vec2(0.001953125,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(512,1,1,1);\nconst ivec2 v11 = ivec2(1,8192);\nconst ivec2 v12 = ivec2(8192,49);\nconst vec2 v13 = vec2(0.0001220703125,0.02040816326530612);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x0 = mod(variable_position_y, v3);\nfloat x0 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x0,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_8cfd722aaec9b2624b1ef934b88536005b4e6d6490db8eadfd460dec": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(512,4);\nconst ivec4 v1 = ivec4(100352,7168,512,1);\nconst ivec4 v2 = ivec4(1,14,14,512);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(401408,14336,512,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,49);\nconst vec2 v7 = vec2(0.0001220703125,0.02040816326530612);\nconst ivec4 v8 = ivec4(401408,14336,512,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,49);\nconst vec2 v11 = vec2(0.0001220703125,0.02040816326530612);\nconst ivec4 v12 = ivec4(401408,14336,512,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,49);\nconst vec2 v15 = vec2(0.0001220703125,0.02040816326530612);\nconst ivec4 v16 = ivec4(401408,14336,512,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,49);\nconst vec2 v19 = vec2(0.0001220703125,0.02040816326530612);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 512 / 1;\n    int kw = khkwc1 / 512 - kh * 1;\n    int c1 = khkwc1 - (kh * 1 + kw) * 512;\n\n    int h1 = h2 * 2 - 0 + kh * 1;\n    int w1 = w2 * 2 - 0 + kw * 1;\n\n    if (h1 < 0 || h1 >= 28 || w1 < 0 || w1 >= 28) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_12c28d983d30d1379439c1ff2f78de9f6398f5cc5769d390ee4a4f16": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(256,1);\nconst ivec2 v2 = ivec2(196,256);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0078125,0.00510204081632653);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0078125,0.00390625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 128; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(256,1,1,1);\nconst ivec4 v2 = ivec4(196,256,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(256,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,7);\nconst vec2 v7 = vec2(0.0001220703125,0.14285714285714285);\nconst ivec4 v8 = ivec4(1,256,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,256);\nconst ivec2 v12 = ivec2(256,1);\nconst vec2 v13 = vec2(0.00390625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,7.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(2304,4);\nconst ivec4 v1 = ivec4(451584,32256,2304,1);\nconst ivec4 v2 = ivec4(1,14,14,2304);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(50176,3584,256,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,7);\nconst vec2 v7 = vec2(0.0001220703125,0.14285714285714285);\nconst ivec4 v8 = ivec4(50176,3584,256,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,7);\nconst vec2 v11 = vec2(0.0001220703125,0.14285714285714285);\nconst ivec4 v12 = ivec4(50176,3584,256,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,7);\nconst vec2 v15 = vec2(0.0001220703125,0.14285714285714285);\nconst ivec4 v16 = ivec4(50176,3584,256,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,7);\nconst vec2 v19 = vec2(0.0001220703125,0.14285714285714285);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 256 / 3;\n    int kw = khkwc1 / 256 - kh * 3;\n    int c1 = khkwc1 - (kh * 3 + kw) * 256;\n\n    int h1 = h2 * 1 - 1 + kh * 1;\n    int w1 = w2 * 1 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 14 || w1 < 0 || w1 >= 14) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(256,1);\nconst ivec2 v2 = ivec2(196,256);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.001736111111111111,0.00510204081632653);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.001736111111111111,0.00390625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 576; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(256,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(7,8192,1);\nconst vec3 v4 = vec3(0.14285714285714285,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(256,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(7,8192,1);\nconst vec3 v8 = vec3(0.14285714285714285,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(256,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(7,8192,1);\nconst vec3 v12 = vec3(0.14285714285714285,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(256,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(7,8192,1);\nconst vec3 v16 = vec3(0.14285714285714285,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(1024,1);\nconst ivec2 v2 = ivec2(196,1024);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.015625,0.00510204081632653);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.015625,0.0009765625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 64; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Tensordot_RGBA_56570407612045294fb854124037decf8f09db4f0aa9f4261419019c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(1024,1);\nconst ivec2 v2 = ivec2(196,1024);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0078125,0.00510204081632653);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0078125,0.0009765625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 128; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_45b80ff942897ffc31f0e544f1ef2973c79511080490894af13ecfd7": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,25.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,25.0);\n\nvoid main() {\n    float y;\n\nfloat x1 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x0 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_40240dd6801b10fb859ccfa84c4ad53364fe843531d220b2ca9ba92e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(1024,1,1,1);\nconst ivec4 v2 = ivec4(196,1024,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1024,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,25);\nconst vec2 v7 = vec2(0.0001220703125,0.04);\nconst ivec4 v8 = ivec4(1,1024,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,1024);\nconst ivec2 v12 = ivec2(1024,1);\nconst vec2 v13 = vec2(0.0009765625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,25.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(1024,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(25,8192,1);\nconst vec3 v4 = vec3(0.04,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(1024,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(25,8192,1);\nconst vec3 v8 = vec3(0.04,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(1024,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(25,8192,1);\nconst vec3 v12 = vec3(0.04,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(1024,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(25,8192,1);\nconst vec3 v16 = vec3(0.04,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(256,1);\nconst ivec2 v2 = ivec2(196,256);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.00390625,0.00510204081632653);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.00390625,0.00390625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 256; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,25.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,25.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(1024,1,1,1);\nconst ivec4 v2 = ivec4(196,1024,1,1);\nconst ivec4 v3 = ivec4(1,1024,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,1024);\nconst ivec2 v7 = ivec2(1024,1);\nconst vec2 v8 = vec2(0.0009765625,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1024,1,1,1);\nconst ivec2 v11 = ivec2(1,8192);\nconst ivec2 v12 = ivec2(8192,25);\nconst vec2 v13 = vec2(0.0001220703125,0.04);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x0 = mod(variable_position_y, v3);\nfloat x0 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x0,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_48802f8b5a0e9113d1903323e0ddbd3ce2585279758b50ca4f6be6a4": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1024,4);\nconst ivec4 v1 = ivec4(50176,7168,1024,1);\nconst ivec4 v2 = ivec4(1,7,7,1024);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(200704,14336,1024,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,25);\nconst vec2 v7 = vec2(0.0001220703125,0.04);\nconst ivec4 v8 = ivec4(200704,14336,1024,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,25);\nconst vec2 v11 = vec2(0.0001220703125,0.04);\nconst ivec4 v12 = ivec4(200704,14336,1024,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,25);\nconst vec2 v15 = vec2(0.0001220703125,0.04);\nconst ivec4 v16 = ivec4(200704,14336,1024,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,25);\nconst vec2 v19 = vec2(0.0001220703125,0.04);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 1024 / 1;\n    int kw = khkwc1 / 1024 - kh * 1;\n    int c1 = khkwc1 - (kh * 1 + kw) * 1024;\n\n    int h1 = h2 * 2 - 0 + kh * 1;\n    int w1 = w2 * 2 - 0 + kw * 1;\n\n    if (h1 < 0 || h1 >= 14 || w1 < 0 || w1 >= 14) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_9c3e0108fd64389c3682227b56341e2893f63cf2c12c2ca475e791a5": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(512,1);\nconst ivec2 v2 = ivec2(49,512);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.00390625,0.02040816326530612);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.00390625,0.001953125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 256; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(512,1,1,1);\nconst ivec4 v2 = ivec4(49,512,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(512,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,4);\nconst vec2 v7 = vec2(0.0001220703125,0.25);\nconst ivec4 v8 = ivec4(1,512,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,512);\nconst ivec2 v12 = ivec2(512,1);\nconst vec2 v13 = vec2(0.001953125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,4.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_2201d86abd0e1a6f7d66240bc6cc9270ef4b13ece637bfa2f13729a9": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4608,4);\nconst ivec4 v1 = ivec4(225792,32256,4608,1);\nconst ivec4 v2 = ivec4(1,7,7,4608);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(25088,3584,512,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,4);\nconst vec2 v7 = vec2(0.0001220703125,0.25);\nconst ivec4 v8 = ivec4(25088,3584,512,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,4);\nconst vec2 v11 = vec2(0.0001220703125,0.25);\nconst ivec4 v12 = ivec4(25088,3584,512,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,4);\nconst vec2 v15 = vec2(0.0001220703125,0.25);\nconst ivec4 v16 = ivec4(25088,3584,512,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,4);\nconst vec2 v19 = vec2(0.0001220703125,0.25);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 512 / 3;\n    int kw = khkwc1 / 512 - kh * 3;\n    int c1 = khkwc1 - (kh * 3 + kw) * 512;\n\n    int h1 = h2 * 1 - 1 + kh * 1;\n    int w1 = w2 * 1 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 7 || w1 < 0 || w1 >= 7) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_a2e7cbfde592bd474e27cb1b7578dc2539700c6156c1f10072048abb": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(512,1);\nconst ivec2 v2 = ivec2(49,512);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0008680555555555555,0.02040816326530612);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0008680555555555555,0.001953125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 1152; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ConvertRtoRGBA_70479bbb29d402826ba8cc764ebed13c58705ba0ce305e6e33dbc97e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(512,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(4,8192,1);\nconst vec3 v4 = vec3(0.25,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(512,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(4,8192,1);\nconst vec3 v8 = vec3(0.25,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(512,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(4,8192,1);\nconst vec3 v12 = vec3(0.25,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(512,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(4,8192,1);\nconst vec3 v16 = vec3(0.25,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_da7ad27b12fbf9714c59a56566692d60390e4b812545164792b9762d": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(2048,1);\nconst ivec2 v2 = ivec2(49,2048);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0078125,0.02040816326530612);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0078125,0.00048828125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 128; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Tensordot_RGBA_b6266594004da0eeef40e796f7294fc8e5a4e75e4d60e23907db0b39": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(2048,1);\nconst ivec2 v2 = ivec2(49,2048);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.00390625,0.02040816326530612);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.00390625,0.00048828125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 256; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_9111bc4a3243d7c63d04701427d4ce944442da636b61db54bbf51cce": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,13.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,13.0);\n\nvoid main() {\n    float y;\n\nfloat x1 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x0 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_54f0f2b6544327ee0d7a3ca26e466c6f1df233ff1c7a105a799eff86": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(2048,1,1,1);\nconst ivec4 v2 = ivec4(49,2048,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(2048,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,13);\nconst vec2 v7 = vec2(0.0001220703125,0.07692307692307693);\nconst ivec4 v8 = ivec4(1,2048,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,2048);\nconst ivec2 v12 = ivec2(2048,1);\nconst vec2 v13 = vec2(0.00048828125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_1943bf25c0c528a949f09b19ea593274bc8b7bb340c49bf472603761": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(2048,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(13,8192,1);\nconst vec3 v4 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(2048,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(13,8192,1);\nconst vec3 v8 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(2048,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(13,8192,1);\nconst vec3 v12 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(2048,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(13,8192,1);\nconst vec3 v16 = vec3(0.07692307692307693,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_9301d9c31b1cc0c199e30cec3d6b2912d301e8fe57e181fb52b881cf": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(512,1);\nconst ivec2 v2 = ivec2(49,512);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.001953125,0.02040816326530612);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.001953125,0.001953125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 512; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_54e754030b256b04dfddc0c8d4b13138df07b63a2e6d2f9142eacffa": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,13.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,13.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_01d56ba214876888139bae202425db5fe92d3c7b0fb4d7a4a1e97d49": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(2048,1,1,1);\nconst ivec4 v2 = ivec4(49,2048,1,1);\nconst ivec4 v3 = ivec4(1,2048,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,2048);\nconst ivec2 v7 = ivec2(2048,1);\nconst vec2 v8 = vec2(0.00048828125,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(2048,1,1,1);\nconst ivec2 v11 = ivec2(1,8192);\nconst ivec2 v12 = ivec2(8192,13);\nconst vec2 v13 = vec2(0.0001220703125,0.07692307692307693);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x0 = mod(variable_position_y, v3);\nfloat x0 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x0,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "AveragePooling2D_fca79ce2610cd3ed79128320018e5399076a23a0101028c758b12ab8": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(2048,1);\nconst ivec4 v1 = ivec4(2048,2048,2048,1);\nconst ivec4 v2 = ivec4(1,1,1,2048);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(100352,14336,2048,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,13);\nconst vec2 v7 = vec2(0.0001220703125,0.07692307692307693);\n\nvoid main() {\n    ivec4 variable_position_y = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n    int n = variable_position_y.x;\n    int h2 = variable_position_y.y;\n    int w2 = variable_position_y.z;\n    int c = variable_position_y.w;\n\n    float sum = 0.0;\n    \n\n    for (int kh = 0; kh < 7; kh++) {\n        int h1 = h2 * 7 - 0 + kh;\n        if (h1 < 0 || h1 >= 7) continue;\n\n        for (int kw = 0; kw < 7; kw++) {\n            int w1 = w2 * 7 - 0 + kw;\n            if (w1 < 0 || w1 >= 7) continue;\n\n            sum += (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n            \n        }\n    }\n\n    gl_FragColor.r = sum / 49.0;\n}\n",
    "Reshape_c48a15e6c0d38213687576c0d7f2a26f5a3189ae65b3a581c11bafb8": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec2 v1 = ivec2(2048,1);\nconst ivec4 v2 = ivec4(128,16,4,1);\nconst ivec4 v3 = ivec4(16,8,4,4);\nconst ivec4 v4 = ivec4(128,16,4,1);\nconst ivec4 v5 = ivec4(128,16,4,1);\nconst ivec4 v6 = ivec4(16,8,4,4);\nconst ivec4 v7 = ivec4(128,16,4,1);\nconst ivec2 v8 = ivec2(1,2048);\nconst ivec2 v9 = ivec2(2048,1);\nconst vec2 v10 = vec2(0.00048828125,1.0);\n\nvoid main() {\n    gl_FragColor.r = texture2D(v0,((vec2((convert_position_fast(((convert_position_fast(((convert_position_fast(gl_FragCoord.yx,v1, v2, v3, 0))),v4, v5, v6, 0))),v7, v8, v9, 0))) + 0.5) * v10)).r;\n}\n",
    "ConvertRtoRGBA_ce6cdc6c6849b6259ec3aaea68cda34007a51ef88f7bd9bb67f576cd": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(2048,4,1);\nconst ivec3 v2 = ivec3(2048,1,1);\nconst ivec3 v3 = ivec3(1,2048,1);\nconst vec3 v4 = vec3(1.0,0.00048828125,1.0);\nconst ivec3 v5 = ivec3(2048,4,1);\nconst ivec3 v6 = ivec3(2048,1,1);\nconst ivec3 v7 = ivec3(1,2048,1);\nconst vec3 v8 = vec3(1.0,0.00048828125,1.0);\nconst ivec3 v9 = ivec3(2048,4,1);\nconst ivec3 v10 = ivec3(2048,1,1);\nconst ivec3 v11 = ivec3(1,2048,1);\nconst vec3 v12 = vec3(1.0,0.00048828125,1.0);\nconst ivec3 v13 = ivec3(2048,4,1);\nconst ivec3 v14 = ivec3(2048,1,1);\nconst ivec3 v15 = ivec3(1,2048,1);\nconst vec3 v16 = vec3(1.0,0.00048828125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_f9aaa084a7c7e24f67165ba79238a1fdd70f51799fac9dd23244e1a1": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1000,1);\nconst ivec2 v1 = ivec2(1000,1);\nconst ivec2 v2 = ivec2(1,1000);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.001953125,1.0);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.001953125,0.001);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 512; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_256e40f348bbdbf01cf9f5bcd445855220f896d5d5b25f406cbd9acc": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1000,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(1000,1,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1,1,1);\nconst ivec2 v5 = ivec2(1,1000);\nconst ivec2 v6 = ivec2(1000,1);\nconst vec2 v7 = vec2(0.001,1.0);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,1000);\nconst ivec2 v11 = ivec2(1000,1);\nconst vec2 v12 = vec2(0.001,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_y,v9, v10, v11, 0))) + 0.5) * v12)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Max_885c4b8c86b77a1b300d120e377b19a432f3e4a3a43d300d03aaf7f0": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(1,1,1,1);\nconst ivec4 v3 = ivec4(1000,1,1,1000);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,1000);\nconst ivec2 v7 = ivec2(1000,1);\nconst vec2 v8 = vec2(0.001,1.0);\n\nvoid main() {\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n    ivec4 variable_position_x = mod(variable_position_y, v3);\n    const int n_x = 1000;\n    float y;\n\n    \n    y = -1.0e10;\n\n    for (int i_x = 0; i_x < 1000; i_x++) {\n        variable_position_x.w = i_x;\n        float x = texture2D(v4, ((vec2((convert_position_fast(variable_position_x,v5, v6, v7, 0))) + 0.5) * v8)).r;\n        {\n            y = x > y ? x : y;\n        }\n    }\n\n    \n\n    gl_FragColor.r = y;\n}\n",
    "ScalarMul_84dc71782759eeab96325a189104a217e74a5af0cca324721b1ae6a2": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(1.0,1.0);\nconst float value = -1.0;\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 * float(value);\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_ea228ba591aabb7ef001c629b2ecfe26cbdf5bda2c9e3c1fcebeb960": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1000,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(1000,1,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1,1,1);\nconst ivec2 v5 = ivec2(1,1000);\nconst ivec2 v6 = ivec2(1000,1);\nconst vec2 v7 = vec2(0.001,1.0);\nconst ivec4 v8 = ivec4(1,1,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,1);\nconst ivec2 v12 = ivec2(1,1);\nconst vec2 v13 = vec2(1.0,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Exp_c866ca567df66a01ff9f147487704a97a59dea34bfeb9d30cee61ecf": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(1000.0,1.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = exp(x0);\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Sum_1d32fe42bc9fef2ac9967cc69f2ee13fc30daf2a6830f32a7611e006": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(1,1,1,1);\nconst ivec4 v3 = ivec4(1000,1,1,1000);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,1000);\nconst ivec2 v7 = ivec2(1000,1);\nconst vec2 v8 = vec2(0.001,1.0);\n\nvoid main() {\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n    ivec4 variable_position_x = mod(variable_position_y, v3);\n    const int n_x = 1000;\n    float y;\n\n    \n    y = 0.0;\n\n    for (int i_x = 0; i_x < 1000; i_x++) {\n        variable_position_x.w = i_x;\n        float x = texture2D(v4, ((vec2((convert_position_fast(variable_position_x,v5, v6, v7, 0))) + 0.5) * v8)).r;\n        {\n            y += x;\n        }\n    }\n\n    \n\n    gl_FragColor.r = y;\n}\n",
    "ElementwiseDiv_1a0de457d521914217c86e122a9badb7edfef6941e7ac9e9c00070d0": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1000,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(1000,1,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1,1,1);\nconst ivec2 v5 = ivec2(1,1000);\nconst ivec2 v6 = ivec2(1000,1);\nconst vec2 v7 = vec2(0.001,1.0);\nconst ivec4 v8 = ivec4(1,1,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,1);\nconst ivec2 v12 = ivec2(1,1);\nconst vec2 v13 = vec2(1.0,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 / x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n"
  },
  "exec_infos": [
    {
      "shader_name": "PartialIm2Col_R_dafb28ba7bedfb27a3247325a76e79d4e30fcad309c6a620934addc8",
      "inputs": [
        {
          "variable_name": "Variable1",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1369"
    },
    {
      "shader_name": "PartialIm2Col_R_0a1011595409fff03ff3f93e0f50d7f243a6a88f846d44c7512015f6",
      "inputs": [
        {
          "variable_name": "Variable1",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1370"
    },
    {
      "shader_name": "Tensordot_R_aafe262f0a8a2ebbe58812bb62f942767fd8e753c592f7e18c66171b",
      "inputs": [
        {
          "variable_name": "Variable1369",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable843",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1371"
    },
    {
      "shader_name": "Tensordot_R_aafe262f0a8a2ebbe58812bb62f942767fd8e753c592f7e18c66171b",
      "inputs": [
        {
          "variable_name": "Variable1370",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable844",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1372"
    },
    {
      "shader_name": "Concat_30eabac47f4909c9a3fc5e928f72f429ff86741f3fd1d5620efda7e3",
      "inputs": [
        {
          "variable_name": "Variable1372",
          "value": 0
        },
        {
          "variable_name": "Variable1371",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1183"
    },
    {
      "shader_name": "ElementwiseMul_d69c354d6e6c1951a0a20f931f84c688e0a4f69f0fa9e0f4d6720393",
      "inputs": [
        {
          "variable_name": "ConstantVariable9",
          "value": 0
        },
        {
          "variable_name": "Variable1183",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable716"
    },
    {
      "shader_name": "ElementwiseAdd_2bc04e710409ce908a7877e92a31b508ed9507e36c9a6af70926ea3b",
      "inputs": [
        {
          "variable_name": "Variable716",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable504",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable5"
    },
    {
      "shader_name": "Relu_22575c2a096342ebbf6ffb700203eb438f7e9870eaa1a916b936e69b",
      "inputs": [
        {
          "variable_name": "Variable5",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable6"
    },
    {
      "shader_name": "MaxPooling2D_6401fe918fe5ceb391e0219a4d623dbe6def0c298ff3d235787b88f6",
      "inputs": [
        {
          "variable_name": "Variable6",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1485"
    },
    {
      "shader_name": "ConvertRtoRGBA_6b5badf12181e78c13fa021fad8c346017d22f21c215dd85a0405ec6",
      "inputs": [
        {
          "variable_name": "Variable1485",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable7"
    },
    {
      "shader_name": "Tensordot_RGBA_f52c0d0dc3a0dc876782de031fc35206e13998ede48b236065ed715e",
      "inputs": [
        {
          "variable_name": "Variable7",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable965",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable10"
    },
    {
      "shader_name": "ElementwiseAdd_daa777c0413be5ec7c8cdfde1599d62bd0be470ab38681ab1f4d952d",
      "inputs": [
        {
          "variable_name": "Variable10",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable14",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable11"
    },
    {
      "shader_name": "Relu_a4cd6cd87b101670950ee0460ed3db053f273e0180b68723c4ec5ccf",
      "inputs": [
        {
          "variable_name": "Variable11",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable12"
    },
    {
      "shader_name": "Im2Col_RGBA_7fff1ab5047a4f569908a0c20ab70148ea1d5807dfc3cfe84d393896",
      "inputs": [
        {
          "variable_name": "Variable12",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1189"
    },
    {
      "shader_name": "Tensordot_RGBA_fd81f36edae778fbd28d0b7171ab7ddb5c29157b47ae86987f1c9862",
      "inputs": [
        {
          "variable_name": "Variable1189",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable967",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable15"
    },
    {
      "shader_name": "ElementwiseAdd_daa777c0413be5ec7c8cdfde1599d62bd0be470ab38681ab1f4d952d",
      "inputs": [
        {
          "variable_name": "Variable15",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable18",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable16"
    },
    {
      "shader_name": "Relu_a4cd6cd87b101670950ee0460ed3db053f273e0180b68723c4ec5ccf",
      "inputs": [
        {
          "variable_name": "Variable16",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1487"
    },
    {
      "shader_name": "ConvertRtoRGBA_6b5badf12181e78c13fa021fad8c346017d22f21c215dd85a0405ec6",
      "inputs": [
        {
          "variable_name": "Variable1487",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable17"
    },
    {
      "shader_name": "Tensordot_RGBA_287b026c91176d309ec3a37816a155796d5cdb1de75db012b29a5107",
      "inputs": [
        {
          "variable_name": "Variable17",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable969",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable22"
    },
    {
      "shader_name": "Tensordot_RGBA_287b026c91176d309ec3a37816a155796d5cdb1de75db012b29a5107",
      "inputs": [
        {
          "variable_name": "Variable7",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable971",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable24"
    },
    {
      "shader_name": "ElementwiseAdd_c8b545c087ae1110ad04aadc6f42ced3be0f2259f62ed39c630ba765",
      "inputs": [
        {
          "variable_name": "Variable24",
          "value": 0
        },
        {
          "variable_name": "Variable22",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable724"
    },
    {
      "shader_name": "ElementwiseAdd_a7bebc3ba848b4d3442944f3c2b34ec998936189f79e3ca1c582b7ba",
      "inputs": [
        {
          "variable_name": "Variable724",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable502",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable26"
    },
    {
      "shader_name": "Relu_739f857c69c000d2cc1b42eaff72139b7f9f45ca9d9daf185ee15c02",
      "inputs": [
        {
          "variable_name": "Variable26",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1493"
    },
    {
      "shader_name": "ConvertRtoRGBA_f0e371144e57e4de1490109999504561ed212987bd01760be5e3959c",
      "inputs": [
        {
          "variable_name": "Variable1493",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable27"
    },
    {
      "shader_name": "Tensordot_RGBA_4340cc146dfcc6316155498f414158390afd7edf941cdfa31dfb57d8",
      "inputs": [
        {
          "variable_name": "Variable27",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable973",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable30"
    },
    {
      "shader_name": "ElementwiseAdd_daa777c0413be5ec7c8cdfde1599d62bd0be470ab38681ab1f4d952d",
      "inputs": [
        {
          "variable_name": "Variable30",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable30",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable31"
    },
    {
      "shader_name": "Relu_a4cd6cd87b101670950ee0460ed3db053f273e0180b68723c4ec5ccf",
      "inputs": [
        {
          "variable_name": "Variable31",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable32"
    },
    {
      "shader_name": "Im2Col_RGBA_7fff1ab5047a4f569908a0c20ab70148ea1d5807dfc3cfe84d393896",
      "inputs": [
        {
          "variable_name": "Variable32",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1202"
    },
    {
      "shader_name": "Tensordot_RGBA_fd81f36edae778fbd28d0b7171ab7ddb5c29157b47ae86987f1c9862",
      "inputs": [
        {
          "variable_name": "Variable1202",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable963",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable35"
    },
    {
      "shader_name": "ElementwiseAdd_daa777c0413be5ec7c8cdfde1599d62bd0be470ab38681ab1f4d952d",
      "inputs": [
        {
          "variable_name": "Variable35",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable34",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable36"
    },
    {
      "shader_name": "Relu_a4cd6cd87b101670950ee0460ed3db053f273e0180b68723c4ec5ccf",
      "inputs": [
        {
          "variable_name": "Variable36",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1491"
    },
    {
      "shader_name": "ConvertRtoRGBA_6b5badf12181e78c13fa021fad8c346017d22f21c215dd85a0405ec6",
      "inputs": [
        {
          "variable_name": "Variable1491",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable37"
    },
    {
      "shader_name": "Tensordot_RGBA_287b026c91176d309ec3a37816a155796d5cdb1de75db012b29a5107",
      "inputs": [
        {
          "variable_name": "Variable37",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable975",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable40"
    },
    {
      "shader_name": "ElementwiseAdd_d30147f76b23191f876f3035a69234ce37af958844b8ba115bc84aa5",
      "inputs": [
        {
          "variable_name": "Variable40",
          "value": 0
        },
        {
          "variable_name": "Variable1493",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable726"
    },
    {
      "shader_name": "ElementwiseAdd_680819142d303e158c1ec38646783a5692f7e1b8fe32cd9e7f404e03",
      "inputs": [
        {
          "variable_name": "ConstantVariable38",
          "value": 0
        },
        {
          "variable_name": "Variable726",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable42"
    },
    {
      "shader_name": "Relu_739f857c69c000d2cc1b42eaff72139b7f9f45ca9d9daf185ee15c02",
      "inputs": [
        {
          "variable_name": "Variable42",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1498"
    },
    {
      "shader_name": "ConvertRtoRGBA_f0e371144e57e4de1490109999504561ed212987bd01760be5e3959c",
      "inputs": [
        {
          "variable_name": "Variable1498",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable43"
    },
    {
      "shader_name": "Tensordot_RGBA_4340cc146dfcc6316155498f414158390afd7edf941cdfa31dfb57d8",
      "inputs": [
        {
          "variable_name": "Variable43",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable977",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable46"
    },
    {
      "shader_name": "ElementwiseAdd_daa777c0413be5ec7c8cdfde1599d62bd0be470ab38681ab1f4d952d",
      "inputs": [
        {
          "variable_name": "Variable46",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable42",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable47"
    },
    {
      "shader_name": "Relu_a4cd6cd87b101670950ee0460ed3db053f273e0180b68723c4ec5ccf",
      "inputs": [
        {
          "variable_name": "Variable47",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable48"
    },
    {
      "shader_name": "Im2Col_RGBA_7fff1ab5047a4f569908a0c20ab70148ea1d5807dfc3cfe84d393896",
      "inputs": [
        {
          "variable_name": "Variable48",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1212"
    },
    {
      "shader_name": "Tensordot_RGBA_fd81f36edae778fbd28d0b7171ab7ddb5c29157b47ae86987f1c9862",
      "inputs": [
        {
          "variable_name": "Variable1212",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable961",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable51"
    },
    {
      "shader_name": "ElementwiseAdd_daa777c0413be5ec7c8cdfde1599d62bd0be470ab38681ab1f4d952d",
      "inputs": [
        {
          "variable_name": "Variable51",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable46",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable52"
    },
    {
      "shader_name": "Relu_a4cd6cd87b101670950ee0460ed3db053f273e0180b68723c4ec5ccf",
      "inputs": [
        {
          "variable_name": "Variable52",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1496"
    },
    {
      "shader_name": "ConvertRtoRGBA_6b5badf12181e78c13fa021fad8c346017d22f21c215dd85a0405ec6",
      "inputs": [
        {
          "variable_name": "Variable1496",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable53"
    },
    {
      "shader_name": "Tensordot_RGBA_287b026c91176d309ec3a37816a155796d5cdb1de75db012b29a5107",
      "inputs": [
        {
          "variable_name": "Variable53",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable979",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable56"
    },
    {
      "shader_name": "ElementwiseAdd_d30147f76b23191f876f3035a69234ce37af958844b8ba115bc84aa5",
      "inputs": [
        {
          "variable_name": "Variable56",
          "value": 0
        },
        {
          "variable_name": "Variable1498",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable727"
    },
    {
      "shader_name": "ElementwiseAdd_680819142d303e158c1ec38646783a5692f7e1b8fe32cd9e7f404e03",
      "inputs": [
        {
          "variable_name": "ConstantVariable50",
          "value": 0
        },
        {
          "variable_name": "Variable727",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable58"
    },
    {
      "shader_name": "Relu_739f857c69c000d2cc1b42eaff72139b7f9f45ca9d9daf185ee15c02",
      "inputs": [
        {
          "variable_name": "Variable58",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable59"
    },
    {
      "shader_name": "Im2Col_RGBA_19df9b720df0dbd75aec89dff0fd9e96c2d7bfa1e1bc04dce0274a7b",
      "inputs": [
        {
          "variable_name": "Variable59",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1230"
    },
    {
      "shader_name": "Tensordot_RGBA_a7f4b997a00d63938232abe063a0fa2d51c6c8d2627f496f843a3874",
      "inputs": [
        {
          "variable_name": "Variable1230",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable981",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable62"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable62",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable54",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable63"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable63",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable64"
    },
    {
      "shader_name": "Im2Col_RGBA_a943845e4ada017175d3c674c513b873ee7a275653548494ea728c7a",
      "inputs": [
        {
          "variable_name": "Variable64",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1223"
    },
    {
      "shader_name": "Tensordot_RGBA_f00c132b7b4c890704ab3878ab0e03ddfc99120da4a76c76e273981c",
      "inputs": [
        {
          "variable_name": "Variable1223",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable983",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable67"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable67",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable58",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable68"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable68",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1499"
    },
    {
      "shader_name": "ConvertRtoRGBA_2ecd12e5763499b4da2c18ee4f8458ff2dcfac137544f805facdee9e",
      "inputs": [
        {
          "variable_name": "Variable1499",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable69"
    },
    {
      "shader_name": "Tensordot_RGBA_743e7cad0a4b1e24227dd916d724b19281fa73243aebd893ea48ebc6",
      "inputs": [
        {
          "variable_name": "Variable69",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable985",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable74"
    },
    {
      "shader_name": "Tensordot_RGBA_5bc68bcabe114d3ee7df06f8a7dd7dd43b708a62c009d983ad8ee2bd",
      "inputs": [
        {
          "variable_name": "Variable1230",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable959",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable76"
    },
    {
      "shader_name": "ElementwiseAdd_3e39163d917d910b5b86893d62827a216d9346c8e7ffc6ffb5509343",
      "inputs": [
        {
          "variable_name": "Variable76",
          "value": 0
        },
        {
          "variable_name": "Variable74",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable728"
    },
    {
      "shader_name": "ElementwiseAdd_d17831a002ad24ab6acee630303afc34e4a6884f557ceabe6e457207",
      "inputs": [
        {
          "variable_name": "Variable728",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable500",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable78"
    },
    {
      "shader_name": "Relu_9f6fd8b5d518659a635b5aeae8d3394b899eb03ae043dc1f84ab03c2",
      "inputs": [
        {
          "variable_name": "Variable78",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1505"
    },
    {
      "shader_name": "ConvertRtoRGBA_619ce4239756512df13d0570850e09dae349fedc7faf0a79d3cc7f2c",
      "inputs": [
        {
          "variable_name": "Variable1505",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable79"
    },
    {
      "shader_name": "Tensordot_RGBA_e42a9f202ff0e906a50efcbc9da50e2e44dd51ef43ab7dc642d38045",
      "inputs": [
        {
          "variable_name": "Variable79",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable987",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable82"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable82",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable70",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable83"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable83",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable84"
    },
    {
      "shader_name": "Im2Col_RGBA_a943845e4ada017175d3c674c513b873ee7a275653548494ea728c7a",
      "inputs": [
        {
          "variable_name": "Variable84",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1237"
    },
    {
      "shader_name": "Tensordot_RGBA_f00c132b7b4c890704ab3878ab0e03ddfc99120da4a76c76e273981c",
      "inputs": [
        {
          "variable_name": "Variable1237",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable957",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable87"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable87",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable74",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable88"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable88",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1503"
    },
    {
      "shader_name": "ConvertRtoRGBA_2ecd12e5763499b4da2c18ee4f8458ff2dcfac137544f805facdee9e",
      "inputs": [
        {
          "variable_name": "Variable1503",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable89"
    },
    {
      "shader_name": "Tensordot_RGBA_743e7cad0a4b1e24227dd916d724b19281fa73243aebd893ea48ebc6",
      "inputs": [
        {
          "variable_name": "Variable89",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable989",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable92"
    },
    {
      "shader_name": "ElementwiseAdd_ff314f97eb87ad7f93d365bda474752dd3bb9202b5caea505d452d5f",
      "inputs": [
        {
          "variable_name": "Variable92",
          "value": 0
        },
        {
          "variable_name": "Variable1505",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable730"
    },
    {
      "shader_name": "ElementwiseAdd_cab34c79962a75acd77729592f9079ee0842b03615267f07ce21def1",
      "inputs": [
        {
          "variable_name": "ConstantVariable78",
          "value": 0
        },
        {
          "variable_name": "Variable730",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable94"
    },
    {
      "shader_name": "Relu_9f6fd8b5d518659a635b5aeae8d3394b899eb03ae043dc1f84ab03c2",
      "inputs": [
        {
          "variable_name": "Variable94",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1510"
    },
    {
      "shader_name": "ConvertRtoRGBA_619ce4239756512df13d0570850e09dae349fedc7faf0a79d3cc7f2c",
      "inputs": [
        {
          "variable_name": "Variable1510",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable95"
    },
    {
      "shader_name": "Tensordot_RGBA_e42a9f202ff0e906a50efcbc9da50e2e44dd51ef43ab7dc642d38045",
      "inputs": [
        {
          "variable_name": "Variable95",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable991",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable98"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable98",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable82",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable99"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable99",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable100"
    },
    {
      "shader_name": "Im2Col_RGBA_a943845e4ada017175d3c674c513b873ee7a275653548494ea728c7a",
      "inputs": [
        {
          "variable_name": "Variable100",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1247"
    },
    {
      "shader_name": "Tensordot_RGBA_f00c132b7b4c890704ab3878ab0e03ddfc99120da4a76c76e273981c",
      "inputs": [
        {
          "variable_name": "Variable1247",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable993",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable103"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable103",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable86",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable104"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable104",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1508"
    },
    {
      "shader_name": "ConvertRtoRGBA_2ecd12e5763499b4da2c18ee4f8458ff2dcfac137544f805facdee9e",
      "inputs": [
        {
          "variable_name": "Variable1508",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable105"
    },
    {
      "shader_name": "Tensordot_RGBA_743e7cad0a4b1e24227dd916d724b19281fa73243aebd893ea48ebc6",
      "inputs": [
        {
          "variable_name": "Variable105",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable995",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable108"
    },
    {
      "shader_name": "ElementwiseAdd_ff314f97eb87ad7f93d365bda474752dd3bb9202b5caea505d452d5f",
      "inputs": [
        {
          "variable_name": "Variable108",
          "value": 0
        },
        {
          "variable_name": "Variable1510",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable731"
    },
    {
      "shader_name": "ElementwiseAdd_cab34c79962a75acd77729592f9079ee0842b03615267f07ce21def1",
      "inputs": [
        {
          "variable_name": "ConstantVariable90",
          "value": 0
        },
        {
          "variable_name": "Variable731",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable110"
    },
    {
      "shader_name": "Relu_9f6fd8b5d518659a635b5aeae8d3394b899eb03ae043dc1f84ab03c2",
      "inputs": [
        {
          "variable_name": "Variable110",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1515"
    },
    {
      "shader_name": "ConvertRtoRGBA_619ce4239756512df13d0570850e09dae349fedc7faf0a79d3cc7f2c",
      "inputs": [
        {
          "variable_name": "Variable1515",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable111"
    },
    {
      "shader_name": "Tensordot_RGBA_e42a9f202ff0e906a50efcbc9da50e2e44dd51ef43ab7dc642d38045",
      "inputs": [
        {
          "variable_name": "Variable111",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable955",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable114"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable114",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable94",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable115"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable115",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable116"
    },
    {
      "shader_name": "Im2Col_RGBA_a943845e4ada017175d3c674c513b873ee7a275653548494ea728c7a",
      "inputs": [
        {
          "variable_name": "Variable116",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1257"
    },
    {
      "shader_name": "Tensordot_RGBA_f00c132b7b4c890704ab3878ab0e03ddfc99120da4a76c76e273981c",
      "inputs": [
        {
          "variable_name": "Variable1257",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable953",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable119"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable119",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable98",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable120"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable120",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1513"
    },
    {
      "shader_name": "ConvertRtoRGBA_2ecd12e5763499b4da2c18ee4f8458ff2dcfac137544f805facdee9e",
      "inputs": [
        {
          "variable_name": "Variable1513",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable121"
    },
    {
      "shader_name": "Tensordot_RGBA_743e7cad0a4b1e24227dd916d724b19281fa73243aebd893ea48ebc6",
      "inputs": [
        {
          "variable_name": "Variable121",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable951",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable124"
    },
    {
      "shader_name": "ElementwiseAdd_ff314f97eb87ad7f93d365bda474752dd3bb9202b5caea505d452d5f",
      "inputs": [
        {
          "variable_name": "Variable124",
          "value": 0
        },
        {
          "variable_name": "Variable1515",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable732"
    },
    {
      "shader_name": "ElementwiseAdd_cab34c79962a75acd77729592f9079ee0842b03615267f07ce21def1",
      "inputs": [
        {
          "variable_name": "ConstantVariable102",
          "value": 0
        },
        {
          "variable_name": "Variable732",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable126"
    },
    {
      "shader_name": "Relu_9f6fd8b5d518659a635b5aeae8d3394b899eb03ae043dc1f84ab03c2",
      "inputs": [
        {
          "variable_name": "Variable126",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable127"
    },
    {
      "shader_name": "Im2Col_RGBA_8cfd722aaec9b2624b1ef934b88536005b4e6d6490db8eadfd460dec",
      "inputs": [
        {
          "variable_name": "Variable127",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1275"
    },
    {
      "shader_name": "Tensordot_RGBA_12c28d983d30d1379439c1ff2f78de9f6398f5cc5769d390ee4a4f16",
      "inputs": [
        {
          "variable_name": "Variable1275",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable997",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable130"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable130",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable106",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable131"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable131",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable132"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable132",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1268"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1268",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable999",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable135"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable135",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable110",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable136"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable136",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1516"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1516",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable137"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable137",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1001",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable142"
    },
    {
      "shader_name": "Tensordot_RGBA_56570407612045294fb854124037decf8f09db4f0aa9f4261419019c",
      "inputs": [
        {
          "variable_name": "Variable1275",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable949",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable144"
    },
    {
      "shader_name": "ElementwiseAdd_45b80ff942897ffc31f0e544f1ef2973c79511080490894af13ecfd7",
      "inputs": [
        {
          "variable_name": "Variable144",
          "value": 0
        },
        {
          "variable_name": "Variable142",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable733"
    },
    {
      "shader_name": "ElementwiseAdd_40240dd6801b10fb859ccfa84c4ad53364fe843531d220b2ca9ba92e",
      "inputs": [
        {
          "variable_name": "Variable733",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable498",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable146"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable146",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1522"
    },
    {
      "shader_name": "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04",
      "inputs": [
        {
          "variable_name": "Variable1522",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable147"
    },
    {
      "shader_name": "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55",
      "inputs": [
        {
          "variable_name": "Variable147",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1003",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable150"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable150",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable122",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable151"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable151",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable152"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable152",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1282"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1282",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable947",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable155"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable155",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable126",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable156"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable156",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1520"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1520",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable157"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable157",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1005",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable160"
    },
    {
      "shader_name": "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b",
      "inputs": [
        {
          "variable_name": "Variable160",
          "value": 0
        },
        {
          "variable_name": "Variable1522",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable735"
    },
    {
      "shader_name": "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35",
      "inputs": [
        {
          "variable_name": "ConstantVariable130",
          "value": 0
        },
        {
          "variable_name": "Variable735",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable162"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable162",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1527"
    },
    {
      "shader_name": "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04",
      "inputs": [
        {
          "variable_name": "Variable1527",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable163"
    },
    {
      "shader_name": "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55",
      "inputs": [
        {
          "variable_name": "Variable163",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1007",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable166"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable166",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable134",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable167"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable167",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable168"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable168",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1292"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1292",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable945",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable171"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable171",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable138",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable172"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable172",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1525"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1525",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable173"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable173",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1009",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable176"
    },
    {
      "shader_name": "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b",
      "inputs": [
        {
          "variable_name": "Variable176",
          "value": 0
        },
        {
          "variable_name": "Variable1527",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable736"
    },
    {
      "shader_name": "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35",
      "inputs": [
        {
          "variable_name": "ConstantVariable142",
          "value": 0
        },
        {
          "variable_name": "Variable736",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable178"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable178",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1532"
    },
    {
      "shader_name": "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04",
      "inputs": [
        {
          "variable_name": "Variable1532",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable179"
    },
    {
      "shader_name": "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55",
      "inputs": [
        {
          "variable_name": "Variable179",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1011",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable182"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable182",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable146",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable183"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable183",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable184"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable184",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1302"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1302",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable943",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable187"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable187",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable150",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable188"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable188",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1530"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1530",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable189"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable189",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1013",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable192"
    },
    {
      "shader_name": "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b",
      "inputs": [
        {
          "variable_name": "Variable192",
          "value": 0
        },
        {
          "variable_name": "Variable1532",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable737"
    },
    {
      "shader_name": "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35",
      "inputs": [
        {
          "variable_name": "ConstantVariable154",
          "value": 0
        },
        {
          "variable_name": "Variable737",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable194"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable194",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1537"
    },
    {
      "shader_name": "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04",
      "inputs": [
        {
          "variable_name": "Variable1537",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable195"
    },
    {
      "shader_name": "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55",
      "inputs": [
        {
          "variable_name": "Variable195",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1015",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable198"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable198",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable158",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable199"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable199",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable200"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable200",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1312"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1312",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable941",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable203"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable203",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable162",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable204"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable204",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1535"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1535",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable205"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable205",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1017",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable208"
    },
    {
      "shader_name": "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b",
      "inputs": [
        {
          "variable_name": "Variable208",
          "value": 0
        },
        {
          "variable_name": "Variable1537",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable738"
    },
    {
      "shader_name": "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35",
      "inputs": [
        {
          "variable_name": "ConstantVariable166",
          "value": 0
        },
        {
          "variable_name": "Variable738",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable210"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable210",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1542"
    },
    {
      "shader_name": "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04",
      "inputs": [
        {
          "variable_name": "Variable1542",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable211"
    },
    {
      "shader_name": "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55",
      "inputs": [
        {
          "variable_name": "Variable211",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1019",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable214"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable214",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable170",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable215"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable215",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable216"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable216",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1322"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1322",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable939",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable219"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable219",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable174",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable220"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable220",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1540"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1540",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable221"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable221",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1021",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable224"
    },
    {
      "shader_name": "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b",
      "inputs": [
        {
          "variable_name": "Variable224",
          "value": 0
        },
        {
          "variable_name": "Variable1542",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable739"
    },
    {
      "shader_name": "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35",
      "inputs": [
        {
          "variable_name": "ConstantVariable178",
          "value": 0
        },
        {
          "variable_name": "Variable739",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable226"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable226",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable227"
    },
    {
      "shader_name": "Im2Col_RGBA_48802f8b5a0e9113d1903323e0ddbd3ce2585279758b50ca4f6be6a4",
      "inputs": [
        {
          "variable_name": "Variable227",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1340"
    },
    {
      "shader_name": "Tensordot_RGBA_9c3e0108fd64389c3682227b56341e2893f63cf2c12c2ca475e791a5",
      "inputs": [
        {
          "variable_name": "Variable1340",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1023",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable230"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable230",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable182",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable231"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable231",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable232"
    },
    {
      "shader_name": "Im2Col_RGBA_2201d86abd0e1a6f7d66240bc6cc9270ef4b13ece637bfa2f13729a9",
      "inputs": [
        {
          "variable_name": "Variable232",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1333"
    },
    {
      "shader_name": "Tensordot_RGBA_a2e7cbfde592bd474e27cb1b7578dc2539700c6156c1f10072048abb",
      "inputs": [
        {
          "variable_name": "Variable1333",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1025",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable235"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable235",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable186",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable236"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable236",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1543"
    },
    {
      "shader_name": "ConvertRtoRGBA_70479bbb29d402826ba8cc764ebed13c58705ba0ce305e6e33dbc97e",
      "inputs": [
        {
          "variable_name": "Variable1543",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable237"
    },
    {
      "shader_name": "Tensordot_RGBA_da7ad27b12fbf9714c59a56566692d60390e4b812545164792b9762d",
      "inputs": [
        {
          "variable_name": "Variable237",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1027",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable242"
    },
    {
      "shader_name": "Tensordot_RGBA_b6266594004da0eeef40e796f7294fc8e5a4e75e4d60e23907db0b39",
      "inputs": [
        {
          "variable_name": "Variable1340",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable937",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable244"
    },
    {
      "shader_name": "ElementwiseAdd_9111bc4a3243d7c63d04701427d4ce944442da636b61db54bbf51cce",
      "inputs": [
        {
          "variable_name": "Variable244",
          "value": 0
        },
        {
          "variable_name": "Variable242",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable740"
    },
    {
      "shader_name": "ElementwiseAdd_54f0f2b6544327ee0d7a3ca26e466c6f1df233ff1c7a105a799eff86",
      "inputs": [
        {
          "variable_name": "Variable740",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable496",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable246"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable246",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1549"
    },
    {
      "shader_name": "ConvertRtoRGBA_1943bf25c0c528a949f09b19ea593274bc8b7bb340c49bf472603761",
      "inputs": [
        {
          "variable_name": "Variable1549",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable247"
    },
    {
      "shader_name": "Tensordot_RGBA_9301d9c31b1cc0c199e30cec3d6b2912d301e8fe57e181fb52b881cf",
      "inputs": [
        {
          "variable_name": "Variable247",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1029",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable250"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable250",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable198",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable251"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable251",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable252"
    },
    {
      "shader_name": "Im2Col_RGBA_2201d86abd0e1a6f7d66240bc6cc9270ef4b13ece637bfa2f13729a9",
      "inputs": [
        {
          "variable_name": "Variable252",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1347"
    },
    {
      "shader_name": "Tensordot_RGBA_a2e7cbfde592bd474e27cb1b7578dc2539700c6156c1f10072048abb",
      "inputs": [
        {
          "variable_name": "Variable1347",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable935",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable255"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable255",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable202",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable256"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable256",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1547"
    },
    {
      "shader_name": "ConvertRtoRGBA_70479bbb29d402826ba8cc764ebed13c58705ba0ce305e6e33dbc97e",
      "inputs": [
        {
          "variable_name": "Variable1547",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable257"
    },
    {
      "shader_name": "Tensordot_RGBA_da7ad27b12fbf9714c59a56566692d60390e4b812545164792b9762d",
      "inputs": [
        {
          "variable_name": "Variable257",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1031",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable260"
    },
    {
      "shader_name": "ElementwiseAdd_54e754030b256b04dfddc0c8d4b13138df07b63a2e6d2f9142eacffa",
      "inputs": [
        {
          "variable_name": "Variable260",
          "value": 0
        },
        {
          "variable_name": "Variable1549",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable742"
    },
    {
      "shader_name": "ElementwiseAdd_01d56ba214876888139bae202425db5fe92d3c7b0fb4d7a4a1e97d49",
      "inputs": [
        {
          "variable_name": "ConstantVariable206",
          "value": 0
        },
        {
          "variable_name": "Variable742",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable262"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable262",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1554"
    },
    {
      "shader_name": "ConvertRtoRGBA_1943bf25c0c528a949f09b19ea593274bc8b7bb340c49bf472603761",
      "inputs": [
        {
          "variable_name": "Variable1554",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable263"
    },
    {
      "shader_name": "Tensordot_RGBA_9301d9c31b1cc0c199e30cec3d6b2912d301e8fe57e181fb52b881cf",
      "inputs": [
        {
          "variable_name": "Variable263",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1033",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable266"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable266",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable210",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable267"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable267",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable268"
    },
    {
      "shader_name": "Im2Col_RGBA_2201d86abd0e1a6f7d66240bc6cc9270ef4b13ece637bfa2f13729a9",
      "inputs": [
        {
          "variable_name": "Variable268",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1357"
    },
    {
      "shader_name": "Tensordot_RGBA_a2e7cbfde592bd474e27cb1b7578dc2539700c6156c1f10072048abb",
      "inputs": [
        {
          "variable_name": "Variable1357",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable933",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable271"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable271",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable214",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable272"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable272",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1552"
    },
    {
      "shader_name": "ConvertRtoRGBA_70479bbb29d402826ba8cc764ebed13c58705ba0ce305e6e33dbc97e",
      "inputs": [
        {
          "variable_name": "Variable1552",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable273"
    },
    {
      "shader_name": "Tensordot_RGBA_da7ad27b12fbf9714c59a56566692d60390e4b812545164792b9762d",
      "inputs": [
        {
          "variable_name": "Variable273",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1035",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable276"
    },
    {
      "shader_name": "ElementwiseAdd_54e754030b256b04dfddc0c8d4b13138df07b63a2e6d2f9142eacffa",
      "inputs": [
        {
          "variable_name": "Variable276",
          "value": 0
        },
        {
          "variable_name": "Variable1554",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable743"
    },
    {
      "shader_name": "ElementwiseAdd_01d56ba214876888139bae202425db5fe92d3c7b0fb4d7a4a1e97d49",
      "inputs": [
        {
          "variable_name": "ConstantVariable218",
          "value": 0
        },
        {
          "variable_name": "Variable743",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable278"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable278",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable279"
    },
    {
      "shader_name": "AveragePooling2D_fca79ce2610cd3ed79128320018e5399076a23a0101028c758b12ab8",
      "inputs": [
        {
          "variable_name": "Variable279",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable280"
    },
    {
      "shader_name": "Reshape_c48a15e6c0d38213687576c0d7f2a26f5a3189ae65b3a581c11bafb8",
      "inputs": [
        {
          "variable_name": "Variable280",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1555"
    },
    {
      "shader_name": "ConvertRtoRGBA_ce6cdc6c6849b6259ec3aaea68cda34007a51ef88f7bd9bb67f576cd",
      "inputs": [
        {
          "variable_name": "Variable1555",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable281"
    },
    {
      "shader_name": "Tensordot_RGBA_f9aaa084a7c7e24f67165ba79238a1fdd70f51799fac9dd23244e1a1",
      "inputs": [
        {
          "variable_name": "Variable281",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable826",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable282"
    },
    {
      "shader_name": "ElementwiseAdd_256e40f348bbdbf01cf9f5bcd445855220f896d5d5b25f406cbd9acc",
      "inputs": [
        {
          "variable_name": "Variable282",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable220",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable283"
    },
    {
      "shader_name": "Max_885c4b8c86b77a1b300d120e377b19a432f3e4a3a43d300d03aaf7f0",
      "inputs": [
        {
          "variable_name": "Variable283",
          "value": 0
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1363"
    },
    {
      "shader_name": "ScalarMul_84dc71782759eeab96325a189104a217e74a5af0cca324721b1ae6a2",
      "inputs": [
        {
          "variable_name": "Variable1363",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1364"
    },
    {
      "shader_name": "ElementwiseAdd_ea228ba591aabb7ef001c629b2ecfe26cbdf5bda2c9e3c1fcebeb960",
      "inputs": [
        {
          "variable_name": "Variable283",
          "value": 0
        },
        {
          "variable_name": "Variable1364",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1365"
    },
    {
      "shader_name": "Exp_c866ca567df66a01ff9f147487704a97a59dea34bfeb9d30cee61ecf",
      "inputs": [
        {
          "variable_name": "Variable1365",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1366"
    },
    {
      "shader_name": "Sum_1d32fe42bc9fef2ac9967cc69f2ee13fc30daf2a6830f32a7611e006",
      "inputs": [
        {
          "variable_name": "Variable1366",
          "value": 0
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1367"
    },
    {
      "shader_name": "ElementwiseDiv_1a0de457d521914217c86e122a9badb7edfef6941e7ac9e9c00070d0",
      "inputs": [
        {
          "variable_name": "Variable1366",
          "value": 0
        },
        {
          "variable_name": "Variable1367",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable284"
    }
  ],
  "constants_map": {
    "ConstantVariable843": {
      "byte_offset": 0,
      "size": 9408
    },
    "ConstantVariable844": {
      "byte_offset": 37632,
      "size": 9408
    },
    "ConstantVariable9": {
      "byte_offset": 75264,
      "size": 64
    },
    "ConstantVariable504": {
      "byte_offset": 75520,
      "size": 64
    },
    "ConstantVariable965": {
      "byte_offset": 75776,
      "size": 4096
    },
    "ConstantVariable14": {
      "byte_offset": 92160,
      "size": 64
    },
    "ConstantVariable967": {
      "byte_offset": 92416,
      "size": 36864
    },
    "ConstantVariable18": {
      "byte_offset": 239872,
      "size": 64
    },
    "ConstantVariable969": {
      "byte_offset": 240128,
      "size": 16384
    },
    "ConstantVariable971": {
      "byte_offset": 305664,
      "size": 16384
    },
    "ConstantVariable502": {
      "byte_offset": 371200,
      "size": 256
    },
    "ConstantVariable973": {
      "byte_offset": 372224,
      "size": 16384
    },
    "ConstantVariable30": {
      "byte_offset": 437760,
      "size": 64
    },
    "ConstantVariable963": {
      "byte_offset": 438016,
      "size": 36864
    },
    "ConstantVariable34": {
      "byte_offset": 585472,
      "size": 64
    },
    "ConstantVariable975": {
      "byte_offset": 585728,
      "size": 16384
    },
    "ConstantVariable38": {
      "byte_offset": 651264,
      "size": 256
    },
    "ConstantVariable977": {
      "byte_offset": 652288,
      "size": 16384
    },
    "ConstantVariable42": {
      "byte_offset": 717824,
      "size": 64
    },
    "ConstantVariable961": {
      "byte_offset": 718080,
      "size": 36864
    },
    "ConstantVariable46": {
      "byte_offset": 865536,
      "size": 64
    },
    "ConstantVariable979": {
      "byte_offset": 865792,
      "size": 16384
    },
    "ConstantVariable50": {
      "byte_offset": 931328,
      "size": 256
    },
    "ConstantVariable981": {
      "byte_offset": 932352,
      "size": 32768
    },
    "ConstantVariable54": {
      "byte_offset": 1063424,
      "size": 128
    },
    "ConstantVariable983": {
      "byte_offset": 1063936,
      "size": 147456
    },
    "ConstantVariable58": {
      "byte_offset": 1653760,
      "size": 128
    },
    "ConstantVariable985": {
      "byte_offset": 1654272,
      "size": 65536
    },
    "ConstantVariable959": {
      "byte_offset": 1916416,
      "size": 131072
    },
    "ConstantVariable500": {
      "byte_offset": 2440704,
      "size": 512
    },
    "ConstantVariable987": {
      "byte_offset": 2442752,
      "size": 65536
    },
    "ConstantVariable70": {
      "byte_offset": 2704896,
      "size": 128
    },
    "ConstantVariable957": {
      "byte_offset": 2705408,
      "size": 147456
    },
    "ConstantVariable74": {
      "byte_offset": 3295232,
      "size": 128
    },
    "ConstantVariable989": {
      "byte_offset": 3295744,
      "size": 65536
    },
    "ConstantVariable78": {
      "byte_offset": 3557888,
      "size": 512
    },
    "ConstantVariable991": {
      "byte_offset": 3559936,
      "size": 65536
    },
    "ConstantVariable82": {
      "byte_offset": 3822080,
      "size": 128
    },
    "ConstantVariable993": {
      "byte_offset": 3822592,
      "size": 147456
    },
    "ConstantVariable86": {
      "byte_offset": 4412416,
      "size": 128
    },
    "ConstantVariable995": {
      "byte_offset": 4412928,
      "size": 65536
    },
    "ConstantVariable90": {
      "byte_offset": 4675072,
      "size": 512
    },
    "ConstantVariable955": {
      "byte_offset": 4677120,
      "size": 65536
    },
    "ConstantVariable94": {
      "byte_offset": 4939264,
      "size": 128
    },
    "ConstantVariable953": {
      "byte_offset": 4939776,
      "size": 147456
    },
    "ConstantVariable98": {
      "byte_offset": 5529600,
      "size": 128
    },
    "ConstantVariable951": {
      "byte_offset": 5530112,
      "size": 65536
    },
    "ConstantVariable102": {
      "byte_offset": 5792256,
      "size": 512
    },
    "ConstantVariable997": {
      "byte_offset": 5794304,
      "size": 131072
    },
    "ConstantVariable106": {
      "byte_offset": 6318592,
      "size": 256
    },
    "ConstantVariable999": {
      "byte_offset": 6319616,
      "size": 589824
    },
    "ConstantVariable110": {
      "byte_offset": 8678912,
      "size": 256
    },
    "ConstantVariable1001": {
      "byte_offset": 8679936,
      "size": 262144
    },
    "ConstantVariable949": {
      "byte_offset": 9728512,
      "size": 524288
    },
    "ConstantVariable498": {
      "byte_offset": 11825664,
      "size": 1024
    },
    "ConstantVariable1003": {
      "byte_offset": 11829760,
      "size": 262144
    },
    "ConstantVariable122": {
      "byte_offset": 12878336,
      "size": 256
    },
    "ConstantVariable947": {
      "byte_offset": 12879360,
      "size": 589824
    },
    "ConstantVariable126": {
      "byte_offset": 15238656,
      "size": 256
    },
    "ConstantVariable1005": {
      "byte_offset": 15239680,
      "size": 262144
    },
    "ConstantVariable130": {
      "byte_offset": 16288256,
      "size": 1024
    },
    "ConstantVariable1007": {
      "byte_offset": 16292352,
      "size": 262144
    },
    "ConstantVariable134": {
      "byte_offset": 17340928,
      "size": 256
    },
    "ConstantVariable945": {
      "byte_offset": 17341952,
      "size": 589824
    },
    "ConstantVariable138": {
      "byte_offset": 19701248,
      "size": 256
    },
    "ConstantVariable1009": {
      "byte_offset": 19702272,
      "size": 262144
    },
    "ConstantVariable142": {
      "byte_offset": 20750848,
      "size": 1024
    },
    "ConstantVariable1011": {
      "byte_offset": 20754944,
      "size": 262144
    },
    "ConstantVariable146": {
      "byte_offset": 21803520,
      "size": 256
    },
    "ConstantVariable943": {
      "byte_offset": 21804544,
      "size": 589824
    },
    "ConstantVariable150": {
      "byte_offset": 24163840,
      "size": 256
    },
    "ConstantVariable1013": {
      "byte_offset": 24164864,
      "size": 262144
    },
    "ConstantVariable154": {
      "byte_offset": 25213440,
      "size": 1024
    },
    "ConstantVariable1015": {
      "byte_offset": 25217536,
      "size": 262144
    },
    "ConstantVariable158": {
      "byte_offset": 26266112,
      "size": 256
    },
    "ConstantVariable941": {
      "byte_offset": 26267136,
      "size": 589824
    },
    "ConstantVariable162": {
      "byte_offset": 28626432,
      "size": 256
    },
    "ConstantVariable1017": {
      "byte_offset": 28627456,
      "size": 262144
    },
    "ConstantVariable166": {
      "byte_offset": 29676032,
      "size": 1024
    },
    "ConstantVariable1019": {
      "byte_offset": 29680128,
      "size": 262144
    },
    "ConstantVariable170": {
      "byte_offset": 30728704,
      "size": 256
    },
    "ConstantVariable939": {
      "byte_offset": 30729728,
      "size": 589824
    },
    "ConstantVariable174": {
      "byte_offset": 33089024,
      "size": 256
    },
    "ConstantVariable1021": {
      "byte_offset": 33090048,
      "size": 262144
    },
    "ConstantVariable178": {
      "byte_offset": 34138624,
      "size": 1024
    },
    "ConstantVariable1023": {
      "byte_offset": 34142720,
      "size": 524288
    },
    "ConstantVariable182": {
      "byte_offset": 36239872,
      "size": 512
    },
    "ConstantVariable1025": {
      "byte_offset": 36241920,
      "size": 2359296
    },
    "ConstantVariable186": {
      "byte_offset": 45679104,
      "size": 512
    },
    "ConstantVariable1027": {
      "byte_offset": 45681152,
      "size": 1048576
    },
    "ConstantVariable937": {
      "byte_offset": 49875456,
      "size": 2097152
    },
    "ConstantVariable496": {
      "byte_offset": 58264064,
      "size": 2048
    },
    "ConstantVariable1029": {
      "byte_offset": 58272256,
      "size": 1048576
    },
    "ConstantVariable198": {
      "byte_offset": 62466560,
      "size": 512
    },
    "ConstantVariable935": {
      "byte_offset": 62468608,
      "size": 2359296
    },
    "ConstantVariable202": {
      "byte_offset": 71905792,
      "size": 512
    },
    "ConstantVariable1031": {
      "byte_offset": 71907840,
      "size": 1048576
    },
    "ConstantVariable206": {
      "byte_offset": 76102144,
      "size": 2048
    },
    "ConstantVariable1033": {
      "byte_offset": 76110336,
      "size": 1048576
    },
    "ConstantVariable210": {
      "byte_offset": 80304640,
      "size": 512
    },
    "ConstantVariable933": {
      "byte_offset": 80306688,
      "size": 2359296
    },
    "ConstantVariable214": {
      "byte_offset": 89743872,
      "size": 512
    },
    "ConstantVariable1035": {
      "byte_offset": 89745920,
      "size": 1048576
    },
    "ConstantVariable218": {
      "byte_offset": 93940224,
      "size": 2048
    },
    "ConstantVariable826": {
      "byte_offset": 93948416,
      "size": 2048000
    },
    "ConstantVariable220": {
      "byte_offset": 102140416,
      "size": 1000
    }
  },
  "licenses": {
    "webdnn": "(C) Machine Intelligence Laboratory (The University of Tokyo), MIT License"
  }
}